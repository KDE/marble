2007-08-21  Torsten Rahn  <rahn@kde.org>

	Applied changes from Daniel Molkentin and
	Christian Ehrlicher to make Marble work on 
	Windows, see commits 702574 and 702899.

2007-08-19  Torsten Rahn  <rahn@kde.org>

        * CMakeLists.txt: Install License.txt

2007-08-19  Inge Wallin  <inge@lysator.liu.se>

	Rename files according to the coding standards: PlaceMarkInfoDialog
	* src/lib/placemarkinfodialog.cpp: renamed into PlaceMarkInfoDialog.cpp
	* src/lib/placemarkinfodialog.h:   renamed into PlaceMarkInfoDialog.h
	* src/lib/placemarkinfodialog.ui:  renamed into PlaceMarkInfoDialog.ui
	* src/lib/CMakeLists.txt:  Reflect name changes
	* src/lib/MarbleWidgetpopupMenu.cpp: use new name
	
	Name changes according to the coding standards:
	 - PlaceMarkModel
	 - PlaceMarkPainter
	 - PlaceMarkManager
	* src/lib/placemarkmanager.cpp: renamed into PlaceMarkManager.cpp
	* src/lib/placemarkmanager.h:   renamed into PlaceMarkManager.h
	* src/lib/placemarkmodel.cpp:   renamed into PlaceMarkModel.cpp
	* src/lib/placemarkmodel.h:     renamed into PlaceMarkModel.h
	* src/lib/placemarkpainter.cpp: renamed into PlaceMarkPainter.cpp
	* src/lib/placemarkpainter.h:   renamed into PlaceMarkPainter.h
	* src/lib/CMakeLists.txt:  Reflect name changes
	* src/lib/MarbleModel.cpp: use new names
	* src/lib/MarbleModel.h:   use new names

	Name changes according to the coding standards for MapTheme and
	PlaceMark.	
	* src/lib/maptheme.cpp: renamed into MapTheme.cpp
	* src/lib/maptheme.h:   renamed into MapTheme.h
	* src/lib/placemark.cpp: renamed into PlaceMark.cpp
	* src/lib/placemark.h:   renamed into PlaceMark.h
	* src/lib/CMakeLists.txt: Reflect name changes.
	* src/lib/MarbleControlBox.cpp,
	* src/lib/MarbleModel.cpp,
	* src/lib/MarbleWidgetPopupMenu.cpp,
	* src/lib/MeasureTool.h,
	* src/lib/PlaceMarkContainer.h,
	* src/lib/kml/KMLFeature.h,
	* src/lib/placemarkinfodialog.cpp,
	* src/lib/placemarkpainter.{h,cpp},
	* src/lib/xmlhandler.cpp:
	use new names

	Krazy issues: make constructors explicit, use Q_SLOTS macro.
	* src/KdeMainWindow.h (MainWindow): Make explicit and use Q_SLOTS
	* src/QtMainWindow.h (MainWindow):  Make explicit and use Q_SLOTS
	* src/lib/MarbleAboutDialog.h: Q_SLOTS
	
	Rename SearchListView into MarbleSearchListView
	* src/lib/searchlistview.cpp: rename into MarbleSearchListView.cpp
	(MarbleSearchListView): initialize d.
	* src/lib/searchlistview.h:   rename into MarbleSearchListView.h
	(d): new member
	* src/lib/MarbleControlBox.ui: refer to new name
	* src/lib/CMakeLists.txt: reflect name change
	Also introduce d-pointer at the same time.


================================================================
	Marble 0.4.0 released: revision 701563
================================================================


2007-08-18  Carlos Licea  <carlos_licea@hotmail.com>

	Removed the Projection function from MarbleModel.
	Aded m_lastProjection to MarbleWidget.

2007-08-18  Inge Wallin  <inge@lysator.liu.se>

	d-pointerify MarbleDirs
	* src/lib/MarbleDirs.{h,cpp}: add d-pointer

	d-pointerify MarbleThemeSelectView
	* src/lib/MarbleThemeSelectView.{h,cpp} (MarbleThemeSelectView):
	add d-pointer

	Fix Krazy issue 23: spelling errors
	* src/lib/MarbleDirs.h: spelling fixes

2007-08-18  Torsten Rahn  <rahn@kde.org>

    Changing the INSTALL file to feature
    the last working version number 
    (of Marble 0.4.0 ) and added 
    a description for adjusting MarbleDataPath

    * INSTALL 

2007-08-18  Torsten Rahn  <rahn@kde.org>

    Removing Debug calls for release and 
    Bumping up version number to 

    Marble 0.4.0

    * src/KdeMainWindow.cpp
    * src/kdemain.cpp
    * src/QtMainWindow.cpp
    * src/lib/AbstractScanlineTextureMapper.cpp
    * src/lib/TileLoader.cpp
    * src/lib/HttpDownloadManager.cpp
    * src/lib/MarbleAboutDialog.ui
    * src/lib/MarbleDirs.cpp
    * src/lib/HttpFetchFile.cpp
    * src/lib/TextureTile.cpp
    * src/lib/placemarkmodel.cpp

2007-08-18  Torsten Rahn  <rahn@kde.org>

    * src/qtmain.cpp:
    * src/kdemain.cpp:
	Added --marbleDataPath command line option.

    * src/KdeMainWindow.{cpp,h}:
    * src/QtMainWindow.{cpp,h}:
	Added ability to read marbleDataPath setting
	(if present).

    * src/lib/MarbleWidget.{cpp,h}:
	Removed redundant setters and getters for 
	MarbleDataPath (d'oh).

    * src/lib/CompassFloatItem.{cpp,h}:
	Added setSourceFile method 
	(while I was on the wrong track fixing).

2007-08-18  Andrew Manson   <g.real.ate@gmail.com>

	Attempted to Correct a small glitch with the drawing of the gps
	Tracking object.
	* src/lib/gps/GpsTracking.cpp : altertered drawing procedure
    
    Added the implementation of saving and closing a file to the 
    GpxFileModel.
    * src/lib/gps/GpxFileModel.cpp : save and close file
    
    Fixed a crash due to null pointer BoundingBox
    * src/lib/gps/TrackSegment.cpp : 
    * src/lib/BoundingBox.cpp :
    * src/lib/AbstractLayer/AbstractLayerContainer.cpp} :
    
    Added an implementation for getting pixel position withought need
    for the "double radius" to "int radius" cast.
    * src/lib/AbstractLayer/AbstractLayerData.{h,cpp} : double math
    
    Added a new slot "enableFileViewActions()" and connected the 
    relivant signals from the File View selection model. Also
    connected the button signals to the GpxFileModel save and close
    implementations.
    * src/lib/MarbleControlBox.cpp :
    
    Added info on how to build marble with debug info.
    * INSTALL : debug info 
    
2007-08-18  Torsten Rahn  <rahn@kde.org>

	Trying to make MARBLE_DATA_PATH work for real.
	* CMakeLists.txt
	* data/CMakeLists.txt

2007-08-18 Carlos Licea <carlos_licea@hotmail.com>
    *MarbleModel: changed m_lastProjection to m_projection,
     also added a projection() which returns m_projection.
    *MarbleWidget: corrected setMapTheme so that it changes the 
     mapTheme if either the theme or the projection have changed.
    *MeasureTool: changed the rectangularDrawDistancePath so that 
     the paths are arcs and not lines anymore.

2007-08-18  Inge Wallin  <inge@lysator.liu.se>

	Rename KAtlasFlag into DeferredFlag:
	* src/lib/katlasflag.cpp: rename into DeferredFlag.cpp
	* src/lib/katlasflag.h:   rename into DeferredFlag.h
	* src/lib/placemarkinfodialog.{h,cpp}: refer to new name
	* src/lib/CMakeLists.txt: reflect name change

2007-09-18  Frederik Schwarzer  <schwarzerf@gmail.com>

	Let the zoom slider get to the limits using the buttons.
	* src/lib/MarbleWidget.cpp (ZoomViewBy): Add new checks for the
	endpoints of the slider.

2007-08-18  Torsten Rahn  <rahn@kde.org>

    Load files in About Dialog on request.

    * src/lib/MarbleAboutDialog.{cpp,h,ui}
    * data/credits_data.html
    * data/credits_authors.html
    * data/CMakeLists.txt

2007-08-17  Torsten Rahn  <rahn@kde.org>

    Adding credits files.

    * data/credits_authors.html
    * data/credits_data.html

2007-08-17  Torsten Rahn  <rahn@kde.org>

    Adding Save and Close button for Andrew to 
    the FileView.

    * src/lib/MarbleControlBox.ui

2007-08-17  Pino Toscano  <pino@kde.org>

    * src/KdeMainWindow.{cpp,h}
    * src/kdemain.cpp
    * src/marble.kcfg
    * src/settings.kcfgc
    * src/CMakeLists.txt
    Add KConfigXT settings for the KDE GUI.

2007-08-17  Inge Wallin  <inge@lysator.liu.se>

	Rename KAtlasControl into ControlView:
	* src/katlascontrol.cpp: rename into ControlView.cpp
	* src/katlascontrol.h:   rename into ControlView.h
	* src/KdeMainWindow.{h,cpp}: refer to new name
	* src/MainWindowCommon.cpp: refer to new name
	* src/kdemain.cpp: refer to new name
	* src/lib/CMakeLists.txt: reflect name change
	Note: Tackat will have to do the Qt-only version.
	
2007-08-17  Torsten Rahn  <rahn@kde.org>

    exposing runTimeMarbleDataPath to MarbleWidget's 
    API.

    * src/lib/MarbleWidget.{cpp,h}
    * src/lib/MarbleDirs.cpp

2007-08-17  Torsten Rahn  <rahn@kde.org>

    * src/lib/measuretool.{cpp,h}
    Renaming to MeasureTool.{cpp,h}

2007-08-17  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleDirs.cpp:
    Rearranging the code to be more in line with the
    description in MarbleDirs.h.
    Renaming the two marbleDataPaths to something more
    intuitive: compileTimeMarbleDataPath (for the cmake
    version) and runTimeMarbleDataPath (for the version
    that gets modified via the settings).

    * CMakeLists.txt:
    Adjusting the definition of MARBLE_DATA_PATH. -
    Should rather get defined like data_dir gets 
    defined in CMakeList.txt in marble/data, 
    shouldn't it?

2007-08-17  Torsten Rahn  <rahn@kde.org>

    Making naming of the directory paths more consistent
    with Qt/KDE naming scheme: "Dir" names a QDir,
    "Path" the QString of the respective directory name.

    systemDir --> systemPath, localDir --> localPath

    * src/lib/TileCreator.cpp
    * src/lib/placemarkmanager.cpp
    * src/lib/HttpDownloadManager.cpp
    * src/lib/HttpFetchFile.cpp
    * src/lib/maptheme.cpp
    * src/lib/tinywebbrowser.cpp
    * src/lib/MarbleDirs.{cpp,h}:

    Introduced MarbleDataPath as a "static global".

2007-08-16  Inge Wallin  <inge@lysator.liu.se>

	Make the compass work again
	* data/legend.html: Mention compass instead of windrose
	* data/CMakeLists.txt: install compass.svg instead of windrose.svg
	
	Rename KAtlasTileCreatorDialog into TileCreatorDialog 
	* src/lib/katlastilecreatordialog.cpp: rename into TileCreatorDialog.cpp
	* src/lib/katlastilecreatordialog.h:   rename into TileCreatorDialog.h
	* src/lib/katlastilecreatordialog.ui:  rename into TileCreatorDialog.ui
	* src/lib/MarbleWidget.{h,cpp}: refer to new name
	* src/lib/MarbleModel.cpp: refer to new name
	* src/lib/CMakeLists.txt: reflect name change

	Rename KAtlasMapScale into MapScaleFloatItem
	* src/lib/katlasmapscale.cpp: rename into MapScaleFloatItem.cpp
	* src/lib/katlasmapscale.h:   rename into MapScaleFloatItem.h
	* src/lib/MarbleWidget.{h,cpp}: refer to new name
	* src/lib/CMakeLists.txt: reflect name change

	Rename KAtlasWindRose into CompassFloatItem
	* src/lib/katlaswindrose.cpp: rename into CompassFloatItem.cpp
	* src/lib/katlaswindrose.h:   rename into CompassFloatItem.h
	* src/lib/MarbleWidget.{h,cpp}: refer to new name
	* src/lib/MarbleLegendBrowser.{h,cpp}: refer to new name
	* src/lib/MarbleControlBox.cpp: refer to new name
	* src/lib/CMakeLists.txt: reflect name change
	* data/svg/windrose.svg: rename into compass.svg

	Rename KAtlasCrossHair into CrossHairFloatItem
	* src/lib/katlascrosshair.cpp: rename into CrossHairFloatItem.cpp
	* src/lib/katlascrosshair.h:   rename into CrossHairFloatItem.h
	* src/lib/MarbleWidget.{h,cpp}: refer to new name
	* src/lib/CMakeLists.txt: reflect name change

2007-08-15  Tim Sutton   <tim@linfiniti.com>

 Final piece of the puzzle to have a working mac bundle:
       - install data into Contents/Resources now
       - moved mac path stuff into systemDir()

2007-08-16  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleDirs.h: 
    Adding summary of the discussion with Tim Sutton.

2007-08-15  Torsten Rahn  <rahn@kde.org>

    * src/lib/maptheme.cpp: 
    * src/lib/MarbleDirs.cpp: 
    Making MarbleDirs.h uninlined by adding MarbleDirs.cpp
    as suggested by Pino Toscano.
    Getting rid of unixDir.

2007-08-15 Carlos Licea <>
    *Integration:
    Finished the integration of the flat projection.

2007-08-15  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleDirs.h: 
    Adding some explanations how MarbleDirs is 
    meant to work.

2007-08-15  Torsten Rahn  <rahn@kde.org>
	
    * CODING: 
    Following up to Ingwa's recent work rules were 
    added when a class should be prefixed "Marble".
    Fell free to add cases I forgot.

2007-08-15  Tim Sutton   <tim@linfiniti.com>

 Added logic to qtmain to search for qjpeg image plugin
 in application bundle.
 Modified 2-release-qt.sh to install qt image plugins
 and also tweaked it so Qt frameworks go into
 @executable_path/../Frameworks/Qt*
 Fixed compiler warnings in :
   src/lib/MarbleWidget.cpp
   src/lib/TileCreator.cpp
   src/lib/GeoPolygon.cpp
 The application now runs from the generated OSX
 bundle but with some issues that need to be resolved.

2007-08-14  Inge Wallin  <inge@lysator.liu.se>

	Rename LegendBrowser into MarbleLegendBrowser
	* src/lib/LegendBrowser.cpp: rename into MarbleLegendBrowser.cpp
	* src/lib/LegendBrowser.h: rename into MarbleLegendBrowser.h
	* src/lib/MarbleControlBox.ui: refer to new name
	* src/lib/MarbleControlBox.cpp: refer to new name
	* src/lib/CMakeLists.txt: reflect name change
	
	Rename katlasthemeselectview into MarbleThemeSelectView:
	* src/lib/katlasthemeselectview.cpp: rename into
	MarbleThemeSelectView.cpp:
	* src/lib/katlasthemeselectview.h: rename into
	MarbleThemeSelectView.h:
	* src/lib/MarbleControlBox.ui: refer to new name
	* src/lib/MarbleControlBox.cpp: refer to new name
	* src/lib/CMakeLists.txt: Reflect name change
	
	Krazy issue 22: signals and slots
	* src/lib/MarbleNavigator.h (MarbleNavigator): Use Q_SIGNALS and
	Q_SLOTS instead

	Krazy issue 18: inappropriate pass-by-value function args.
	* src/lib/MarbleControlBox.cpp (selectTheme): Take const QString &

	Krazy issue 13: proper include directives.
	* src/lib/MarbleAboutDialog.h
	* src/lib/kml/KMLPointParser.cpp
	* src/lib/MarbleWidget.h
	* src/lib/MarbleNavigator.h
	* src/lib/xmlhandler.cpp
	* src/lib/GeoPoint.cpp

	Krazy issue 11: Constructors should be declared explicit
	* src/lib/gps/GpsLayer.h (class GpsLayer),
	* src/lib/gps/GpsTracking.h (class GpsTracking): do it.

	Maintain binary forward compatibility through d-pointer
	* src/lib/MarbleControlBox.h: Move private member into private
	class in cpp file.
	* src/lib/MarbleControlBox.cpp (class MarbleControlBoxPrivate):
	m_mapthememodel: new member

2007-08-14  Torsten Rahn  <rahn@kde.org>

	* src/lib/GeoPolygon.cpp:
	Make Marble work with PowerPC.
	Patch passed on by 
	Steffen Joeris <steffen.joeris@skolelinux.de>

2007-08-14  Torsten Rahn  <rahn@kde.org>

	* src/lib/MarbleWidget.{cpp,h}:
        Adding method stub to configure MarbleDataDir

	* src/lib/TileCreator.{cpp,h}:
	Adding lots of more qDebugs to catch some 
	possible errors and safer coding. 
	Fix for the case where the image is smaller than
	2 * tileSize x tileSize.

2007-08-14  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/TileCreator.cpp (createTiles): Fix all warnings

	Fix the TileCreator that apparently got destroyed some time ago.
	* src/lib/TileCreator.cpp (createTiles): Fix infinite loop due to
	test of unsigned number against >= 0.
	(createTiles): fix wrong test of initial tile size.

2007-08-13  Torsten Rahn  <rahn@kde.org>
	
    * src/lib/TileCreator.{cpp,h}: 
    Add a return value to createTiles ...

2007-08-13  Torsten Rahn  <rahn@kde.org>
	
    * src/lib/MarbleControlBox.ui: 
    Make it compile with Qt 4.2 again.

2007-08-13  Andrew Manson   <g.real.ate@gmail.com>

    Added File View Tab to the Marble Control box as a view to the 
    GpxFileModel. The tab is disabled by default and needs command
    line arg --enableFileView to see.
    * src/kdemain.cpp: cmd line arg
    * src/katlascontrol.cpp : new method to enable/disable File view
    * src/lib/MarbleControlBox.ui : new tab
    
    Added a GpxFileModel to MarbleModelPrivate and added nessary 
    accessors.
    * src/lib/MarbleWidget.cpp : accessor 
    * src/lib/MarbleModel.h : new member variable and accessors
    
    Added nessary ModelItem functions to GpxFile
    * src/lib/gps/GpxFile.cpp : more like a model item
    
    Added new Class GpxFileModel 
    * src/lib/gps/GpxFileModel.{h,cpp} : new class
    
    Added the use of a GpxFileModel to the GpsLayer
    * src/lib/gps/GpsLayer : used GpxFileModel
    
    
2007-08-13  Torsten Rahn  <rahn@kde.org>
	
	- adding window manager application icon
	- adding What's this icon to the ressource file.

    * src/marble.qrc
    * src/QtMainWindow.cpp
    * src/icons/marble.png

2007-08-13  Pino Toscano  <pino@kde.org>

    * src/KdeMainWindow:
    * src/marbleui.rc:
        - Make the KDE GUI look more like a KDE application.

2007-08-13  Torsten Rahn  <rahn@kde.org>
	
    * src/lib/MarbleWidget.cpp:
    * src/lib/gps/Track.cpp:
    * src/lib/TileCreator.cpp:
    * src/lib/MarbleModel.cpp:
    * src/lib/TextureTile.cpp:
    * src/lib/texcolorizer.cpp:
    * CMakeLists.txt:

        Patch by Tim Sutton of QGIS fame. Introduces 
	some fixes and more careful coding to 
	TileCreator, some minor fixes and qDebug statements.

2007-08-13  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleModel.{h,cpp}:
    * src/lib/maptheme.cpp:
    * src/lib/katlasthemeselectview.cpp:
        - Selecting the Maptheme icon in the themeview at startup.

    * src/MarbleTest.cpp:
    * src/QtMainWindow.cpp:
    * src/lib/MarbleWidget.{h, cpp}:
    * src/lib/MarbleControlBox.{ui,h,cpp}:
        - Saving and retrieving Home Location in settings. 

2007-08-12  Torsten Rahn  <rahn@kde.org>

    * src/lib/gps/GpsTracking.{ cpp } : 
	- disabled update method to make Marble compile again.
	Andrew, please fix your code in line 109. :-)

2007-08-11  Inge Wallin  <inge@lysator.liu.se>

	d-pointerify MarbleNavigator (also Krazy issue 8).
	* src/lib/MarbleNavigator.h (MarbleNavigator): Introduce d-pointer
	* src/lib/MarbleNavigator.cpp (MarbleNavigatorPrivate): new class
	(MarbleNavigator):use d-pointer where appropriate
	
	Fix some warnings
	* src/lib/gps/GpsTracking.cpp: Fix warnings

	Move MarbleNavigator from src/plugins/navigator/ to src/lib/
	* src/lib/MarbleNavigator.h,
	* src/lib/MarbleNavigator.cpp,
	* src/lib/MarbleNavigator.ui: Moved from src/plugins/navigator
	* src/lib/CMakeLists.txt,
	* src/plugins/navigator/CMakeLists.txt: Reflect changes.

	d-pointerify MarbleAboutDialog (also Krazy issue 8).
	* src/lib/MarbleAboutDialog.h (MarbleAboutDialog): Introduce d-pointer
	* src/lib/MarbleAboutDialog.cpp (MarbleAboutDialogPrivate): new class
	(MarbleAboutDialog):use d-pointer where appropriate
	
2007-08-11  Andrew Manson   <g.real.ate@gmail.com>

    Altered the updateGps() function in MarbleWidget so that it now
    only updates the region where the the gps marker was and 
    currenly is
    * src/lib/MarbleWidget.cpp : updateGps() now uses regions

    Added a new class that represents a GpsTracking Object. It is 
    designed to remove the need for the Gps Layer to know abount gpsd
    or any other methods of getting current location.
    * src/lib/gps/GpsTracking.{ h, cpp } : new class

    Removed anyting that GpsTracking now covers from GpsLayer
    * src/lib/gps/GpsLayer.{h, cpp} : removed tracking code

    Made convince method distance() static in AbstractLayer
    * src/lib/AbstractLayer/AbstractLayer.h : static methods

2007-08-11  Inge Wallin  <inge@lysator.liu.se>

	Rename class KAtlasAboutDialog into MarbleAboutDialog and change
	file names into MarbleAboutDialog.*
	* src/lib/MarbleAboutDialog.cpp: renamed from katlasaboutdialog.cpp
	* src/lib/MarbleAboutDialog.h: renamed from katlasaboutdialog.h
	* src/lib/MarbleAboutDialog.ui: renamed from katlasaboutdialog.ui
	* src/lib/MarbleWidgetPopupMenu.cpp (slotAboutDialog): Use new name
	* src/lib/CMakeLists.txt: Name changes as above.
	
	Remove warnings
	src/lib/MarbleWidget.cpp (paint): mark unused with Q_UNUSED()
	src/lib/global.h (Projection): Disable Mercator
	src/lib/texcolorizer.cpp (rectangularColorizer): comment out unused var

	Make the code clearer by naming things better.
	* src/lib/placemarkpainter.{h,cpp} (testXBug): Renamed from testbug().
	(m_useXWorkaround): renamed from m_useworkaround
	
	Fix Krazy issue 13: proper include directives.
	* src/lib/TileCreator.h (TILECREATOR_H): Renamed from TILESCISSOR_H

	More cleaning
	* src/lib/MarbleWidget.cpp: Cleaning and make the code follow the
	coding standards.

	Simplify code in preparation for refactorings
	* src/lib/placemarkpainter.cpp (sphericalPaintPlaceFolder): Code
	simplifications
	(rectangularPaintPlaceFolder): Code simplifications

2007-08-11  Torsten Rahn  <rahn@kde.org>

    Adding "Set Home Location" to the RMB menu.
    (Wanted to have this in before the message string freeze).
    Something is strange with the sign of the 
    longitude stored in Radians .... I have to check that.

    TODO: store in configuration file.

    * src/lib/MarbleWidget.cpp
    * src/lib/MarbleWidgetPopupMenu.h
    * src/lib/MarbleWidgetPopupMenu.cpp

2007-08-11  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.{cpp,h}:
        - Introduce setProjection() and projection()
	- introduce homePoint( double& lon, double& lat )

2007-08-11  Inge Wallin  <inge@lysator.liu.se>

	Added getter for symmetry.
	* src/lib/AbstractLayer/AbstractLayerInterface.cpp (visible): new
	method.

2007-08-11  Torsten Rahn  <rahn@kde.org>

    * src/lib/MarbleWidget.{cpp,h}:
        - Some fixes concerning Carlos' introduction of
        projections
        - make all methods accept Degree as a unit by 
          default ( geoCoordinates RAD->DEG )
    * src/lib/MarbleWidgetInputHandler.cpp:
    * src/lib/MarbleWidgetPopupMenu.{cpp,h}:
        - make all methods accept Degree as a unit by 
          default ( geoCoordinates RAD->DEG )
    * src/lib/Quaternion.cpp:
        - remove DEG2ONE.
        - fix an inaccuracy due to usage of int instead of double
    * src/lib/global.h:
        - remove DEG2ONE.
    * CODING:
        - adding a notion on upper/lower case conventions for 
          variable / method names.

2007-08-11  Torsten Rahn  <rahn@kde.org>
	
    * src/lib/MarbleWidget.{h,cpp} : Introducing RAD2DEG and fixing
      rotate(phi,theta,psi) as well as other methods. 

    * src/lib/BoundingBox.{h,cpp} : some minor coding style fixes.

    * src/lib/global.h : RAD2DEG, DEG2RAD, DEG2ONE, RAD2ONE		

    Adjustments to the usage of RAD2DEG, etc.:		
    * src/lib/vectormap.cpp
    * src/lib/GeoPoint.h
    * src/lib/kml/KMLPointParser.cpp
    * src/lib/global.h
    * src/lib/MarbleWidget.h
    * src/lib/MarbleControlBox.cpp
    * src/lib/xmlhandler.cpp
    * src/lib/GridMap.cpp
    * src/lib/GeoPoint.cpp
    * src/lib/MarbleWidgetInputHandler.cpp
    * src/qtmain.cpp

2007-08-10  Andrew Manson   <g.real.ate@gmail.com>

    Added a method to extract the global Quaternion from the Widget
    for the use in Bounding Box. Code was just Coppied from 
    MarbleWidget::geoCoordinates. 
    Added a method MarbleWidget::setBoundingBox that applies the
    current View's BoundingBox to the bounding box object in 
    viewParams.
    * src/lib/MarbleWidget.{h,cpp} : added methods globalQuaternion
                                     and setBoundingBox

     Added the implementation of a GpxFile so that it may be used for
    a file model/view implementation. Just meant to seperate the 
    containers from the model.
    * src/lib/gps/GpxFile.{h,cpp} : new class

    Added the simple implementation of the RouteContainer just as a 
    completion of the Gps Collection classes. 
    * src/lib/gps/RouteContainer.{cpp, h} : new class

    Added implementation of GpxFile to GpxSax
    * src/lib/gps/GpxSax.{cpp,h} : implemented GpxFile

    Added a constructor to TrackPoint that creates a deep copy of 
    annother Trackpoint and fixed the drawing of each point.
    * src/lib/gps/TrackPoint.{h,cpp} : new constructor and better 
                                       painting.

    Fixed the drawing of current position in GpsLayer and made it draw
    a directional arrow in the direction of travel.
    * src/lib/gps/GpsLayer.cpp : better current position drawn

    Implemented BoundingBox checking for TrackSegment
    * src/lib/gps/TrackSegment.{cpp, h } :bounding box

    Added a class that represents a bounding box and deals with any 
    functions expected of a bounding box class such as intersection
    detection. 
    * src/lib/BoundingBox.{h,cpp} : new class

    Added a default implemetation of paintLayer to AbstractLayer and 
    added another convience class to measure the istance between two 
    QPointF. 
    * src/lib/AbstractLayer/AbstractLayer.{h,cpp} : default 
                                        implementation of paint and
                                        new convinence class.

    Added a new interface that aviods the need to subclass 
    AbstractLayer{data, container} to implement a new layer and 
    instead making them only a default implementation. 
    * src/lib/AbstractLayer/AbstractLayerInterface.{h, cpp}: new class

    Added a BoundingBox variable to ViewParams
    * src/lib/ViewParams.h : BoundingBox

    Added operator==() to GeoPoint that evaluates the lat and long 
    using GeoPoint::geoCoordinates and compares them 
    * src/lib/Geopoint.{h,cpp} : operator==()

    

2007-08-10  Inge Wallin  <inge@lysator.liu.se>

	Cleaning
	* src/lib/placemarkpainter.cpp: Change fontWidth into textWidth,
	because that's what it is.

2007-08-10  Torsten Rahn  <rahn@kde.org>
	
	Tooltips for Mapthemes ...

        *  src/lib/vectorcomposer.cpp
        *  src/lib/maptheme.cpp
        *  src/lib/MarbleControlBox.ui
        *  src/lib/katlasthemeselectview.cpp

2007-08-10  Torsten Rahn  <rahn@kde.org>

	Putting Findlibgps.cmake back into place 
	which wasn't meant to get removed.

        *  Findlibgps.cmake

2007-08-10  Torsten Rahn  <rahn@kde.org>

	Another patch by Tim Sutton of QGis fame.
	Improves Mac integration, introduces 
	unit tests and fixes some indentation.

        *  install_mac/1-release-extra.sh
        *  install_mac/2-release-qt.sh
        *  src/lib/vectorcomposer.cpp
        *  src/lib/maptheme.cpp
        *  src/lib/TextureTile.cpp
        *  src/lib/GeoPolygon.cpp
        *  src/lib/MarbleDirs.h
        *  src/lib/CMakeLists.txt
        *  src/CMakeLists.txt
        *  tests/GeoPolygonTest.cpp
        *  tests/MarbleWidgetTest.cpp
        *  tests/CMakeLists.txt
        *  CMakeLists.txt

2007-08-10  Torsten Rahn  <rahn@kde.org>

	Renaming TileScissor class and files to 
	TileCreator.

	* src/lib/tilescissor.cpp
	* src/lib/TileCreator.cpp
	* src/lib/MarbleModel.cpp
	* src/lib/CMakeLists.txt
	* src/lib/tilescissor.h
	* src/lib/TileCreator.h
	* src/lib/katlastilecreatordialog.cpp
	* src/DESIGN
	* src/tilecreator/main.cpp
	* src/lib/tilescissor.cpp

2007-08-10  Torsten Rahn  <rahn@kde.org>

	* src/lib/tilescissor.cpp:

	Fixing another issue reported by Luis Silva:

	"The image sizes must really be the correct ones 
	otherwise the tiling process just puts the same 
	image on both hemispheres." 

	Cleaning up the TileScissor class a lot while 
	fixing that issue: Renamed variables to be
	more suggestive and made code more elegant.

2007-08-10  Inge Wallin  <inge@lysator.liu.se>

	Simplify: break out some common code into private methods.
	* src/lib/placemarkpainter.cpp (roomForLabel): new method
	(labelFontData): new method
	(sphericalPaintPlaceFolder): use new methods
	(rectangularPaintPlaceFolder): use new methods

2007-08-10  Torsten Rahn  <rahn@kde.org>

	Fixing issue reported by Luis Silva by making sure 
	that the preview images match the expected size:

	" Also the 'map view' tab gets garbled with previews of 
	sizes other than 136x136. The previews go on top of each other."

2007-08-10  Inge Wallin  <inge@lysator.liu.se>

	Simplify code to make it easier to find common code.
	* src/lib/placemarkpainter.cpp (sphericalPaintPlaceFolder):
	Simplify code structure.
	(rectangularPaintPlaceFolder): Reindent to follow code structure.
	Also makes it more like sphericalPaintPlaceFolder
	
	Integrate some changes from the KML SoC project.
	* src/lib/placemarkpainter.{h,cpp} (paintPlaceFolder): Remove
	double definition and #ifdef test
	(sphericalPaintPlaceFolder): Take firstTime parameter
	(rectangularPaintPlaceFolder): Take firstTime parameter
	(paintPlaceFolder): Use new call signatures.
	
	Fix Krazy issue 18: check for inappropriate pass-by-value args
	* src/lib/placemarkmanager.{h,cpp} (loadDocumentFromCache): Take
	QString& parameter.

2007-08-10  Torsten Rahn  <rahn@kde.org>

    - renaming katlasdirs.h -> MarbleDirs.h

     * ChangeLog
     * src/lib/tilescissor.cpp
     * src/lib/AbstractScanlineTextureMapper.cpp
     * src/lib/katlasdirs.h
     * src/lib/gps/Waypoint.cpp
     * src/lib/gps/TrackSegment.cpp
     * src/lib/placemarkpainter.cpp
     * src/lib/TileLoader.cpp
     * src/lib/katlasaboutdialog.cpp
     * src/lib/placemarkmanager.{h,cpp}
     * src/lib/placemarkinfodialog.cpp
     * src/lib/placemark.cpp
     * src/lib/LegendBrowser.cpp
     * src/lib/HttpDownloadManager.cpp
     * src/lib/vectorcomposer.cpp
     * src/lib/MarbleControlBox.cpp
     * src/lib/MarbleModel.cpp
     * src/lib/HttpFetchFile.cpp
     * src/lib/GlobeScanlineTextureMapper.cpp
     * src/lib/maptheme.cpp
     * src/lib/TextureTile.cpp
     * src/lib/tinywebbrowser.cpp
     * src/lib/MarbleDirs.h
     * src/lib/katlaswindrose.cpp
     * src/lib/CMakeLists.txt
     * src/lib/katlasflag.cpp
     * src/lib/placemarkmodel.cpp
     * src/lib/MarbleWidgetInputHandler.cpp
     * src/lib/FlatScanlineTextureMapper.cpp
     * src/DESIGN

2007-08-10  Inge Wallin  <inge@lysator.liu.se>

	Move definition of enum Projection from class ViewParams to
	global.h
	* src/lib/global.h: Add definition of Projection
	* src/lib/ViewParams.h (ViewParams): Remove definition
	* src/lib/ViewParams.cpp (ViewParams): Move init of projection

2007-08-09  Inge Wallin  <inge@lysator.liu.se>

	Rename utils.h to global.h since it better describes what it is.
	* src/lib/utils.h: rename to global.h
	* GridMap.cpp,          GridMap.h,
	* MarbleModel.cpp,      MarbleModel.h,
	* MarbleWidget.cpp,
	* MarbleWidgetInputHandler.cpp,
	* placemarkpainter.cpp,
	* texcolorizer.cpp,
	* vectormap.cpp,        vectormap.h:
	include global.h instead of utils.h
	* src/lib/CMakeLists.txt: Add global.h to include files.

2007-08-09  Torsten Rahn  <rahn@kde.org>

    - Fixed CID 4021:
      line 56: HttpJob  *job = new HttpJob();
      if acceptJob (line 63) returns false, job is leaked

2007-08-09  Inge Wallin  <inge@lysator.liu.se>

	Start of a unification of the projections.
	* src/lib/vectormap.cpp (createFromPntMap): Remove a difference
	between flat and mercator projections
	* src/lib/vectormap.cpp: Cleaning
	* src/lib/GeoPolygon.cpp: Cleaning

2007-08-09  Torsten Rahn  <rahn@kde.org>

    - Introduce support for Radian/Degree in MarbleWidget.

    - Patch by Tim Sutton of QGIS fame: Make katlasdirs.h
	use MARBLE_DATA_PATH / CMAKE_INSTALL_PREFIX

2007-08-09  Torsten Rahn  <rahn@kde.org>

    - Ladies and gentlemen, we introduce the 
	International Date Line.
      Cross it from east to the west to enjoy 
      a peek 24-hours ahead into the future of KDE 4.

     Our IDL includes the Kiribati line.

     More info at: 
http://en.wikipedia.org/wiki/International_Dateline

     * tools/dateline/dateline.pro
     * tools/dateline/dateline.cpp
     * data/mwdbii/DATELINE.PNT
     * data/CMakeLists.txt

2007-08-09  Torsten Rahn  <rahn@kde.org>

    - The guy's name is not Marcator but
	http://en.wikipedia.org/wiki/Gerardus_Mercator
	The same is true for the projection.

	Corrected Projections->Projection
	as it's not ints, bools, etc. either ;-)
    - Some changes related to the dateline.

    * src/lib/ViewParams.h
    * src/lib/vectorcomposer.cpp

2007-08-08  Murad Tagirov  <tmurad@gmail.com>

    - Added method to write cache index file.
    PlaceMarkManager will restore already loaded documents
    based on this index file. Added base methods to pack/unpack kml documents
    * src/lib/placemarkmanager.{h,cpp}

    - Added copyright information.
    * src/lib/kml/Serializable.h

2007-08-08  Torsten Rahn  <rahn@kde.org>

    - Fixing #endif and adding the missing icon for the Mac

    * src/CMakeLists.txt
    * src/mac/Contents/Resources/Marble.icns

2007-08-08  Torsten Rahn  <rahn@kde.org>

    - Initial support for the International Dateline

    * src/lib/vectorcomposer.{h,cpp}

    - Big Patch by Tim Sutton of QGIS fame:
	- lots of cmake changes mostly specific to the Mac
	  that remove the need for the BuildOnOSX.sh script
	- some minor fixes in the GPS and KML stuff

    * src/plugins/CMakeLists.txt
    * src/mac/CMakeLists.txt
    * src/mac/Contents/Resources/CMakeLists.txt
    * src/mac/Contents/CMakeLists.txt
    * src/lib/MarbleWidget.cpp
    * src/lib/gps/Route.cpp
    * src/lib/gps/Track.cpp
    * src/lib/kml/KMLDocumentParser.cpp
    * src/lib/kml/Serializable.h
    * src/lib/MarbleWidget.h
    * src/lib/CMakeLists.txt
    * src/CMakeLists.txt
    * cmake_templates/svnscript.cmake.in_cmake
    * cmake_templates/marblesvnversion.h.in_cmake
    * cmake_templates/cmake_uninstall.cmake.in
    * BuildOnOSX.sh
    * Findlibgps.cmake
    * data/CMakeLists.txt
    * CMakeLists.txt

    Hope this doesn't break too much ;-)

2007-08-07  Torsten Rahn  <rahn@kde.org>

    Please use lon-lat order in Marble (not lat-lon).

    - Cleaned up the MarbleWidget class: Added API docs,
      moved all occurences of lat-lon to lon-lat order.

    * src/lib/MarbleWidget.{h,cpp}
    * src/lib/MarbleWidgetInputHandler.{h,cpp}
    * src/lib/MarbleControlBox.cpp
    * src/MarbleTest.cpp
    * CODING

    Added lon-lat order to the CODING standards

2007-08-07  Torsten Rahn  <rahn@kde.org>

    - Added Settings saving for the GUI to the Qt4 frontend

    * src/QtMainWindow.{h,cpp}

2007-08-06  Murad Tagirov  <tmurad@gmail.com>

    Added initial support of serialization of kml
    objects to memory stream. In order to serialize any
    object class must be inherited from Serializable abastract class
    * src/lib/kml/Serializable.h: new file
    * src/lib/placemarkmanager.cpp
    * src/lib/kml/KMLFeature.{h,cpp}
    * src/lib/kml/KMLObject.{h,cpp}
    * src/lib/kml/KMLPlaceMarkParser.cpp
    * src/lib/kml/KMLContainer.{h,cpp}

2007-08-06  Torsten Rahn  <rahn@kde.org>

    - Cleaned up some "GPS" method names that are not really
      limited to GPS usage after question from Prashanth Udupa.
    - removed "timeout" signal from MarbleWidget as it seems
      to have been moved to MarbleModel.
      Andrew: I hope you're fine with these changes - otherwise
      tell me :-)

    * example2.ui
    * src/MarbleControlBox.{h,cpp}
    * src/lib/MarbleWidget.{h,cpp}
    * src/lib/MarbleWidgetInputHandler.{h,cpp}

2007-08-06  Torsten Rahn  <rahn@kde.org>

    - Clean up GlobeScanlineTextureMapper class
    - Use memcpy for interlaced mode

    * src/lib/GlobeScanlineTextureMapper.{h,cpp}

2007-08-06  Murad Tagirov  <tmurad@gmail.com

    Parse Marble's placemark specific fields
    "role" and "pop". Should use schema instead in feature
    * src/lib/kml/KMLDocumentParser.cpp
    * src/lib/kml/KMLFeature.{h,cpp}
    * src/lib/kml/KMLPointParser.cpp
    * src/lib/kml/KMLPlaceMarkParser.{h,cpp}

2007-08-05  Torsten Rahn  <rahn@kde.org>

    Starting to add "View" menu entry to Marble:
    - Show Navigation Panel, Full Screen, Status Bar
    Currently only available for the Qt4 version.
    TODO for tonight:
    - Add QSetting to save QMainWindow settings
    - Port the changes to the KDE version of Marble
    * src/katlascontrol.{h,cpp}
    * src/QtMainWindow.{h,cpp}

2007-08-05  Inge Wallin  <inge@lysator.liu.se>

	Compile!
	* src/lib/kml/KMLFeatureParser.cpp (characters): remove a variable.
	At least gcc 4.1.2 didn't like the previous code.

2007-08-05  Murad Tagirov  <tmurad@gmail.com>

    KMLContainer now returns PlaceMarkContainer which
    contains only placemarks that are inside visible area
    * src/lib/kml/KMLPlaceMarkParser.cpp
    * src/lib/kml/KMLContainer.{h,cpp}
    * src/lib/MarbleModel.cpp

2007-08-05  Inge Wallin  <inge@lysator.liu.se>

	Some trivial cleaning that I did while looking through the code to
	understand it better.
	* lib/AbstractScanlineTextureMapper.cpp,
	* lib/MarbleWidget.cpp,
	* lib/placemarkpainter.cpp,
	* lib/TileLoader.cpp,
	* lib/GlobeScanlineTextureMapper.h,
	* lib/placemarkpainter.h,
	* lib/TileLoader.h,
	* lib/GlobeScanlineTextureMapper.cpp,
	* lib/TextureTile.cpp,
	* lib/TextureTile.h,
	* lib/FlatScanlineTextureMapper.cpp:
	Cleaning

2007-08-05  Murad Tagirov  <tmurad@gmail.com>

    Added "m_visible" to KMLFeature class. MarbleModel now
    paints only folders which are visible.
    * src/lib/kml/KMLFeature.{h,cpp}
    * src/lib/kml/KMLFeatureParser.{h,cpp}
    * src/lib/MarbleModel.cpp

    Updated class diagram and kml related task list
    * projects/kml/kml-tasks
    * projects/kml/KMLClasses.xmi

2007-08-05  Murad Tagirov  <tmurad@gmail.com>

    Added new "bool firstTime" parameter to
    PlaceMarkPainter::paintPlaceFolder method.
    * src/lib/placemarkpainter.{h,cpp}
    * src/lib/MarbleModel.{h,cpp}

2007-08-05  Torsten Rahn <rahn@kde.org>

	- Applied patch from "Prashanth Udupa" <prashanth.udupa@gmail.com>
	Thanks for the patch and for the awesome blog entry at:
	http://prashanthudupa.livejournal.com/

2007-08-04  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issue 14: inline methods in public classes.
	* src/lib/placemarkmodel.{h,cpp}: Move all inline methods to .cpp
	file
	* src/lib/PlaceMarkContainer.{h,cpp}: Move all inline methods to
	.cpp file

	Fix Krazy issue 12: validity of i18n calls.
	* src/KdeMainWindow.cpp (exportMapScreenShot): Add a context to
	the i18n call.

	Fix Krazy issue 8: public classes with private members
	* src/lib/MarbleControlBox.{h,cpp}: d-pointerify the private
	members that point to the tabs in the widget.

2007-08-04  Murad Tagirov  <tmurad@gmail.com>

    Added basic support of kml folders. MarbleModel iterates over list
    of kml folders and displays placemarks from each folder. This
    list of folders will be displayed in MarbleControlBox, so user
    will be able to enable/disable desired folder
    * src/lib/placemarkmanager.{h,cpp}
    * src/lib/kml/KMLDocument.{h,cpp}
    * src/lib/kml/KMLContainer.{h,cpp}
    * src/lib/MarbleModel.cpp

    Inherit KMLFeature -> PlaceMark, not KMLPlaceMark -> PlaceMark
    * src/lib/kml/KMLFeature.{h,cpp}
    * src/lib/kml/KMLPlaceMark.h

2007-08-04  Murad Tagirov  <tmurad@gmail.com>

    Refactored KMLContainer parsing. Ignore whitespaces while parsing.
    Added counter for current tag level to avoid parsing of wrong data.
    * src/lib/placemarkmanager.cpp
    * src/lib/kml/KMLDocumentParser.cpp
    * src/lib/kml/KMLContainerParser.{h,cpp}
    * src/lib/kml/KMLPointParser.cpp
    * src/lib/kml/KMLFeatureParser.cpp
    * src/lib/kml/KMLPlaceMarkParser.{h,cpp}
    * src/lib/kml/KMLDocument.cpp
    * src/lib/kml/KMLObjectParser.{h,cpp}

    Make PlaceMarkPainter's part which paint using VisiblePlaceMark comile again
    * src/lib/placemarkpainter.{h,cpp}

2007-08-04  Inge Wallin  <inge@lysator.liu.se>

	Move UI file include from the .h file to the cpp to make it easier
	to use for external applications.
	* src/lib/MarbleControlBox.h: Don't inherit from
	Ui::MarbleControlBox
	* src/lib/MarbleControlBox.cpp: let Ui::MarbleControlBox be a part
	of MarbleControlBoxPrivate
	(all): add 'd->uiWidget.' to all uses of previous members.

	Make it possible to choose between Flat projection and globe
	projection in one place only (utils.h).
	* src/lib/vectormap.cpp,
	* src/lib/utils.h,
	* src/lib/MarbleWidget.cpp,
	* src/lib/placemarkpainter.cpp,
	* src/lib/MarbleModel.h,
	* src/lib/GlobeScanlineTextureMapper.h,
	* src/lib/vectormap.h,
	* src/lib/AbstractScanlineTextureMapper.h,
	* src/lib/MarbleModel.cpp,
	* src/lib/GlobeScanlineTextureMapper.cpp,
	* src/lib/texcolorizer.h,
	* src/lib/GridMap.h,
	* src/lib/texcolorizer.cpp,
	* src/lib/GridMap.cpp,
	* src/lib/MarbleWidgetInputHandler.cpp:
	Include utils.h and remove all other defines of FLAT_PROJ

2007-08-03  Inge Wallin  <inge@lysator.liu.se>

	Finish change lng -> lon according to the coding standards in the
	library.
	* src/lib/GeoPolygon.cpp,
	* src/lib/MarbleWidgetInputHandler.cpp,
	* src/lib/MarbleWidgetPopupMenu.cpp,
	* src/lib/placemarkmanager.cpp,
	* src/lib/placemarkpainter.cpp,
	* src/lib/vectormap.cpp:
	Change all lng -> lon

	Change lng -> lon according to the coding standards.
	* src/lib/AbstractScanlineTextureMapper.cpp,
	* src/lib/AbstractScanlineTextureMapper.h,
	* src/lib/FlatScanlineTextureMapper.cpp,
	* src/lib/FlatScanlineTextureMapper.h,
	* src/lib/GlobeScanlineTextureMapper.cpp,
	* src/lib/GlobeScanlineTextureMapper.h,
	* src/lib/GridMap.cpp,
	* src/lib/GridMap.h,
	* src/lib/MarbleWidget.cpp,
	* src/lib/MarbleWidget.h,
	* src/lib/measuretool.cpp,
	* src/lib/measuretool.h,
	* src/lib/TileLoader.cpp:
	Change all lng -> lon

	Reduce visibility of internal classes.
	* src/lib/ViewParams.h (class ViewParams): Don't export this class
	* src/lib/MarbleModel.{h,cpp}: Move #include of maptheme.h from .h
	to .cpp
	* src/lib/maptheme.h (class ViewParams): Don't export this class

 	Remove storage of half of image width/height
	* src/lib/GridMap.cpp: Remove storage of half of image width/heigh.

	Cleaning and remove storage of half of image width/height
	* src/lib/AbstractScanlineTextureMapper.{h,cpp},
	* src/lib/FlatScanlineTextureMapper.cpp,
	* src/lib/GlobeScanlineTextureMapper.cpp: Cleaning

2007-08-02  Inge Wallin  <inge@lysator.liu.se>

	* src/lib/MarbleModel.cpp: General cleaning.

2007-08-01  Murad Tagirov  <tmurad@gmail.com>

    Added methods to support kml subfolders
    * src/lib/kml/KMLFolder.{h,cpp}

2007-07-31  Inge Wallin  <inge@lysator.liu.se>

	Make kdemain and qtmain more alike.
	* src/kdemain.cpp (main): Add same setAttribute as in qtmain.cpp

	More krazy issue 14: inline methods in public classes
	* src/lib/placemarkpainter.h (drawLabelText): not inline
	* src/lib/placemark.h (population): not inline
	* src/lib/xmlhandler.h (popidx): not inline
	(seleced): not inline

	Make it easier to change test setup.
	* src/MarbleTest.cpp (timeDemo): More logical setup

	Fix krazy issue 14: inline methods in public classes
	* src/lib/GridMap.{h,cpp} (initCrossHorizon): Remove function and
	put in the code, since it was only used once..
	* src/lib/vectormap.{h,cpp} (initCrossHorizon): Remove function
	and put in the code, since it was only used once..

	Cleaning, according to the TODO file.
	* src/lib/maptheme.cpp: Clean (not many changes, really)

	Fix krazy issue 23: spelling errors.
	* src/lib/HttpFetchFile.cpp (httpRequestFinished): Fix spelling
	* src/lib/gps/Route.cpp (draw): Fix spelling

	Translate headers of MarbleControlBox tabs, and fix Krazy issue
	18: inappropriate pass-by-value function args.
	* src/lib/MarbleControlBox.{h,cpp} (setWidgetTabShown): Parameter
	QString& instead of QString
	(setNavigationTabShown),
	(setLegendTabShown),
	(setMapViewTabShown),
	(setCurrentLocationTabShown): Translate header of tabs

	Add a warning for tackat to look at.
	* src/lib/TileCache.cpp (insert): Add warning.

	Krazy issue 13: Proper include directives.
	* src/lib/TileCache.cpp: Guard
	* src/lib/gps/TrackContainer.h: Guard
	* src/lib/gps/TrackPoint.h: Guard

	Coding standards.
	* src/lib/MarbleWidgetInputHandler.cpp: Fix indentation according
	to coding standards.

	Move vector on/off parameters to ViewParams:
	* src/lib/ViewParams.h: new members: m_showIcelayer,
	m_showBorders, m_showRivers, m_showLakes
	* src/lib/ViewParams.cpp (constructor): initialize the new members
	* src/lib/vectorcomposer.h (class VectorComposer):
	(drawTexturemap): Change signature to only take a ViewParams*
	(paintBaseTexturemap): Change signature to take a ViewParams*
	(paintTexturemap): Change signature to take a ViewParams*
	* src/lib/vectorcomposer.cpp:
	* src/lib/MarbleModel.cpp (paintGlobe): Call
	VectorComposer methods according to new signatures.
	* src/lib/MarbleWidget.cpp: Use new members in Viewparams

2007-07-30  Inge Wallin  <inge@lysator.liu.se>

	Move relief on/off parameter to ViewParams
	* src/lib/ViewParams.h: new member: m_showRelief
	* src/lib/ViewParams.cpp (constructor): initialize m_showRelief
	* src/lib/texcolorizer.h (class TextureColorizer): Change
	signature to only take a ViewParams*
	* src/lib/texcolorizer.cpp (colorize):
	  - take a ViewParams* as parameter only
	  - Get showRelief from the view params
	* src/lib/MarbleModel.cpp (paintGlobe): Call
	TexColorizer::colorize according to new signature.
	* src/lib/MarbleWidget.cpp (showRelief): Get data from viewparams.
	(setShowRelief): set data in viewparams

2007-07-29  Murad Tagirov  <tmurad@gmail.com>

    Temporary disabled weightfilter if KML_GSOC is defined
    * src/lib/placemarkpainter.cpp

    Commented m_coordinate field becauase PlaceMark class
    already has same protected field
    * src/lib/kml/KMLPlaceMark.h

    Not delete m_placeMarkContainer field is KML_GSOC is defined
    * src/lib/MarbleModel.cpp

2007-07-29  Torsten Rahn  <rahn@kde.org>

	- getting KDE.NL out of the water and fixing Ingwa's
	  most recent complaint.
	  -- which was depth in lakes.

2007-07-29  Torsten Rahn  <rahn@kde.org>

	- ressource priorities: homeDir, systemDir, unixDir

2007-07-29  Torsten Rahn  <rahn@kde.org>

	- Added the "Plain Map". Extended configuration abilities
	  for the different maps via the .dgml file.
	  This will make Danny Allen slightly more happy.

2007-07-28  Torsten Rahn  <rahn@kde.org>

	- Added a TileCache. This makes moving back and forth a
	  smoother experience.
	- Start to measure in --timedemo only as soon as all needed
	  tiles got cached already.
	- TODO: Preload tiles which will likely need to get loaded.
	  This would make Marble feel snappier as the preloaded tiles
	  could be loaded in the background.

2007-07-25  Andrew Manson   <g.real.ate@gmail.com>

    Added a Test to Marble test that returns a set of averages at
    different zoom levels for drawing a large gpx file
    * src/MarbleTest. {cpp,h} : Added the test

    Added teh catch for the command line argument "--gpsdemo" that
    initiates the Gps test
    * src/kdemain.cpp:
    * src/qtmain.cpp:

    Added accessors to katlascontrol for enableing/disableing the
    tabs in MarbleControlBox
    * src/katlascontrol.{cpp,h}:

    Added new Class as a representation of a gps Route (untested)
    * src/lib/gps/Route.(cpp,h):

    Added getters for all member variables and repaired all the Api
    Comments to follow the style of other files
    * src/lib/gps/GpsElement.h : comments + getters
    * src/lib/gps/GpsElement.cpp: comments + getters
    * src/lib/gps/Track.h: comments

    Made GpsDataElements follow more object oriented aproach layed
    down by AbstractLayerData by implementing draw(). Cleaned up Api
    comments.
    * src/lib/gps/Track.{h,cpp}: following OO Aproach
    * src/lib/gps/Waypoint.{h,cpp}: comments, OO Aproach

    Repaired problems with Gpx file loading and applied a true
    representation of a tracksegment
    * src/lib/gps/GpxSax.cpp:

    made TrackSegment follow Object Oriented Aproach and draw a red
    triangle after every 5 trackpoints
    * src/lib/gps/TrackSegment.{cpp,h}:

    Added a convience method to AbstractLayer to finde the square of
    the distance between 2 QPoints
    * src/lib/AbstractLayer/AbstractLayerContainer.{h,cpp}:

    Added a method to MarbleModel to stop the polling and start it
    again at a specified speed ( currently used to stop polling while
    doing gps test)
    * src/lib/MarbleModel.{h,cpp}:

    added functionality to add and remove tabs to MarbleControlBox
    * src/lib/MarbleControlBox.{cpp,h}:

2007-07-25  Torsten Rahn  <rahn@kde.org>

	- Making Marble aware of 404's, so tiles only get saved if they get
	  downloaded successfully.
	- Make sure to black list URL's which don't work so we don't create a DOS attack ;-)

2007-07-25  Inge Wallin  <inge@lysator.liu.se>

	Continue the separation of Model/View by moving more stuff to
	ViewParams:
	* src/lib/placemarkpainter.h (m_showCities, m_showTerrain): Move
	to ViewParams.
	(showCities,showTerrain,setShowCities,setShowTerrain): remove
	* src/lib/ViewParams.h (m_showCities, m_showTerrain): new members
	* src/lib/ViewParams.cpp (m_showCities, m_showTerrain): initialize
	* src/lib/placemarkpainter.{h,cpp} (paintPlaceFolder,isVisible):
	Take parameter ViewParams*
	* src/lib/MarbleModel.cpp (paintGlobe): Use new call signature for
	PlaceMarkPainter::paintPlaceFolder
	* src/lib/MarbleWidget.cpp (showTerrain): Use new call signature
	for all of the above.

2007-07-24  Inge Wallin  <inge@lysator.liu.se>

	Fix krazy issue 4: Check for an acceptable copyright.
	* src/lib/utils.h: Fix Copyright.

2007-07-24  Torsten Rahn  <rahn@kde.org>

	- 6 digits column and row coordinates for tiles
	- adjusting the BlueMarble and CityLights theme appearance
	  to the uploaded tiles

2007-07-23  Murad Tagirov  <tmurad@gmail.com>

	Fixed compilation of code ifdefed with KML_GSOC
	* src/lib/MarbleModel.cpp

2007-07-23  Inge Wallin  <inge@lysator.liu.se>

	Move the image caches to ViewParams (same commit as the next entry)
	* src/lib/ViewParams.h (ViewParams): m_coastImage: New member
	* src/lib/ViewParams.cpp (ViewParams): Initialize new member
	* src/lib/MarbleWidget.cpp: Use new call conventions everyhere
	* src/lib/MarbleModel.{h,cpp} (paintGlobe): new parameters:
	width,height

	Make the resize functions take width, height parameters instead of
	a QImage*
	* src/lib/MarbleModel.cpp (resize): Take width,height parameters
	and use them for all calls.
	* src/lib/AbstractScanlineTextureMapper.cpp (resizeMap):
	* src/lib/GlobeScanlineTextureMapper.cpp (resizeMap):
	* src/lib/GridMap.cpp (resizeMap):
	* src/lib/vectorcomposer.cpp (resizeMap):
	* src/lib/vectormap.cpp (resizeMap): Take width,height parameters
	instead of a QImage*.

	Move some more view parameters to ViewParams
	* src/lib/ViewParams.h (ViewParams): Added members m_showGrid,
	m_showPlaceMarks, m_showElevationModel
	* src/lib/ViewParams.cpp (ViewParams): Initialize new members
	* src/lib/Marble{Model,Widget}.{h,cpp} (showGrid, showPlaceMarks,
	showElevationModel + set... methods): Remove. Use the ones in
	MarbleWidget or ViewParams instead.

2007-07-20  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issue 23: Spelling errors.
	* src/lib/AbstractLayer/AbstractLayer.h (class AbstractLayer): Fix
	spelling mistakes

	Remove warnings
	* src/lib/gps/GpxSax.cpp: Remove most warnings
	* src/lib/AbstractLayer/AbstractLayer.cpp
	* src/lib/AbstractLayer/AbstractLayerData.cpp
	* src/lib/placemarkpainter.cpp
	* src/lib/kml/KMLObject.cpp
	* src/lib/kml/KMLPointParser.cpp
	* src/lib/kml/KMLFeatureParser.cpp
	* src/lib/HttpDownloadManager.cpp
	* src/lib/TextureTile.cpp
	* src/lib/texcolorizer.cpp
	Remove all warnings,

	Fix Krazy issue 18: Inappropriate pass-by-value.
	* src/lib/MarbleWidget.cpp (openGpxFile): Take QString& instead of
	QString.

2007-07-19  Torsten Rahn  <rahn@kde.org>

- Adding a GUI item to change the projection. Disabled for now.

2007-07-19  Inge Wallin  <inge@lysator.liu.se>

	Put more stuff into ViewParams.
	* src/lib/ViewParams.h (ViewParams): New members: m_radius,
	m_radiusUpdated, m_planetAxis, m_planetAxisUpdated.
	* src/lib/ViewParams.cpp (ViewParams): Initialize new members
	* src/lib/Marble{Model,Widget}.{h,cpp}: Move lots of methods from
	MarbleModel to MarbleWidget.
	(paintGlobe): New parameter redrawBackground
	* src/lib/katlasviewinputhandler.{h,cpp}: adapt to changes above.

2007-07-18  Torsten Rahn  <rahn@kde.org>

- Redo for the GPS tab (Now called "Current Location")
- Disabling that widget as it's meant to be offered just for a
particular use case where Marble is meant to provide a dialog

Sorry Andrew - I needed these changes immediately
for a presentation yesterday.

2007-07-15  Torsten Rahn  <rahn@kde.org>

- Making Marble compile again.

2007-07-12  Andrew Manson   <g.real.ate@gmail.com>
    Cleaned up the comments for all of the AbstractLayer classes and
    formalised the api more.

    AbstractLayer now contains a Vector of AbstractLayerContainers
    and a simple implementation to call each of their draw() methods
    when the AbstractLayer draw() method is called.
    * src/lib/AbstractLayer/AbstractLayer.{h,cpp}

2007-07-12  Murad Tagirov  <tmurad@gmail.com>
    Inherit KMLPlaceMark from Placemark to not touch
    placemarks painting at this step
    * src/lib/kml/KMLPlaceMark.h

    Added method to KMLDocument to obtain active PlaceMarkContainer.
    PlaceMarkManager uses this to get placemarks which are on a screen
    * src/lib/kml/KMLDocument.{h,cpp}
    * src/lib/placemarkmanager.{h,cpp}

    Updated kml-tasks after talk on IRC with Torsten
    * projects/kml/kml-tasks

2007-07-11  Torsten Rahn  <rahn@kde.org>

- Fixed tiny build problem introduced by WildFox.
- Various tiny cleanups

2007-07-11  Murad Tagirov  <tmurad@gmail.com>

    Added support to open kml files from dialog
    * src/QtMainWindow.cpp

    Use ifdef in addPlaceMarkFile method to apply new kml parsing
    * src/lib/placemarkmanager.cpp

2007-07-11  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issue 22: Check for signals and slots
	* src/lib/MarbleControlBox.h (MarbleControlBox): Use Q_SLOTS and
	Q_SIGNALS instead slots and signals

2007-07-11  Murad Tagirov  <tmurad@gmail.com>

    Use QCoreApplication instead of QApplication
    Use "Schema" tag to compliant to kml reference
    * tools/asc2kml/asc2kml.cpp

    Updated kml diagram after talk with Inge Wallin
    * projects/kml/KMLClasses.xmi

2007-07-11  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issues 4 and 15: copyright and license
	* src/lib/AbstractScanlineTextureMapper.h
	* src/lib/AbstractScanlineTextureMapper.cpp
	* src/lib/FlatScanlineTextureMapper.h
	* src/lib/FlatScanlineTextureMapper.cpp
	* src/lib/GlobeScanlineTextureMapper.h
	* src/lib/GlobeScanlineTextureMapper.cpp
	* src/lib/gps/GpsLayer.h: Fix license and copyright

	Fix Krazy issue 4: Acceptable copyright.
	* src/lib/gps/Track.cpp (addTrackSeg): Fix Krazy issue and cleaning

2007-07-10  Inge Wallin  <inge@lysator.liu.se>

	Break out drawing of the atmosphere effect into its own function
	* src/lib/MarbleWidget.{h,cpp} (drawAtmosphere): New function
	(zoomView): Call drawAtmosphere()
	(resizeEvent): Call drawAtmosphere()
	* src/lib/MarbleModel.cpp (resize): Remove draw atmosphere

	Introduce the ViewParams class and move one item into it.
	* src/lib/ViewParams.{h,cpp}: new files.
	* src/lib/MarbleWidget.cpp (class MarbleWidgetPrivate): Add
	m_viewParams and delete m_canvasImage
	* src/lib/MarbleModel.{h,cpp}: Use ViewParams where applicable.

	Move initialization of the basic image from MarbleModel to
	MarbleWidget
	* src/lib/MarbleModel.cpp (setRadius): Remove most contents
	* src/lib/MarbleWidget.cpp (zoomView): Add the contents from above

	Krazy fix: Use proper include directives
	* src/lib/httpfetchfile.h: Fix include

	Krazy fixes: Add 'explicit' to constructors:
	* src/lib/AbstractScanlineTextureMapper.h,
	src/lib/FlatScanlineTextureMapper.h,
	src/lib/GlobeScanlineTextureMapper.h: Add explict keyword

	Remove m_canvasimg from MarbleModelPrivate.
	* src/lib/MarbleModel.{h,cpp} (paintGlobe): Add parameter canvasImage
	(setRadius): Add parameter canvasImage
	(resize):  Add parameter canvasImage
	(setCanvasImage): removed
	* src/lib/MarbleWidget.cpp: Follow new call signatures

	Remove m_view from MarbleModelPrivate so that the Model no longer
	keeps track of the View.
	* src/lib/MarbleModel.{h,cpp} (setMapTheme): Add a parent
	parameter
	(class MarbleModelPrivate): remove m_view.
	* src/lib/MarbleWidget.cpp (setMapTheme): Use new call convenction.

	Improve parameter parsing in KDE version.
	* src/kdemain.cpp (main): Use KDE classes to parse command line

2007-07-10  Torsten Rahn  <rahn@kde.org>

- Fixed disabled accurate pole texture mapping.
- Fixed miscalculated interpolation borders (will speed up Marble in
quite some cases)

2007-07-09  Torsten Rahn  <rahn@kde.org>

- "I don't like to give away pizzas for nothing ;-)"-performance patches
  for mapTexture()

  Results in almost 20% better overall performance.

- Better testcase for MarbleTest

- Adding airports ( not done yet )

- Small patches by Benoit Sigoure
  (which result in maybe 1% improved performance here)

- initial changes to tinywebbrowser to get image loading
  for Wikipedia support get done in the future.

2007-07-07  Inge Wallin  <inge@lysator.liu.se>

	d-pointer'ify LegendBrowser
	* src/lib/LegendBrowser.{h,cpp}: Use d-pointer

	Remove inline functions in LegendBrowser
	* src/lib/LegendBrowser.{h,cpp}: Move all the slots into the cpp
	file, since we don't want exported classes with inline member
	functions.

	Fix d-pointer for MarbleModel
	* src/lib/MarbleModel.cpp: Move m_timer to MarbleModelPrivate

	d-pointer'ify PlaceMarkModel
	* src/lib/placemarkmodel.{h,cpp}: Use d-pointer

2007-07-07  Torsten Rahn  <rahn@kde.org>

- Fix the bug that lets the wrong texture be used at high zooms.
  The fix only works until zoomlevel 12. For zoom level 13
  the bug will reappear: It happens due to values exceeding their maximum range.

2007-07-06  Torsten Rahn  <rahn@kde.org>

- Fixes for Andrew's File Open Dialog.

2007-07-06  Torsten Rahn  <rahn@kde.org>

* src/lib/<placemarkmodel.cpp:

- Patch by Benoit Sigoure aka Tsuna.

Fixes Marble's previous habit not to recognize placemark
names if they are typed in lower case.

This has recently been an issue that was frequently complained about.

Thanks Benoit!

2007-07-06  Inge Wallin  <inge@lysator.liu.se>

	Clean the AbstractLayer class
	* src/lib/AbstractLayer/AbstractLayer.{h,cpp}: general cleaning
	(showLayer): renamed into visible.
	(setShowLayer): renamed into setVisible.
	* src/lib/MarbleModel.cpp: use new names
	* src/lib/MarbleWidget.cpp: Use new names
	* src/lib/FlatScanlineTextureMapper.h: Use new names

	Cleaning and Apidox
	* src/lib/MarbleModel.{h,cpp} (MarbleModel): Clean up, and Apidox.

2007-07-04  Inge Wallin  <inge@lysator.liu.se>

	d-pointer'ify MarbleControlBox
	* src/lib/MarbleControlBox.{h,cpp}: Use d-pointer

2007-07-02 Murad Tagirov  <tmurad@gmail.com>

    Removed calling of "clear" method in constructor of PlaceMarkContainer.
    * src/lib/PlaceMarkContainer.cpp

    Updated kml class diagram to show how to integrate KMLDocument with
    current PlaceMarkPainter class. Should discuss with Marble people.
    * projects/kml/KMLClasses.xmi

2007-07-02  Inge Wallin  <inge@lysator.liu.se>

	Fix the compile for QTONLY.
	* CMakeLists.txt: Apply fixes for QTONLY that were done previously
	for KDE
	* src/CMakeLists.txt: Separate the QTONLY and KDE cases

	Move MarbleControlBox into the library where it belongs.
	* src/MarbleControlBox.{h,cpp}: Move to src/lib
	* src/MarbleControlBox.ui: Move to src/lib and fix includes
	* src/katlascontrol.cpp: Fix includes
	* src/CMakeLists.txt: Fix include directories
	* src/lib/CMakeLists.txt: Fix include directories

2007-07-01  Murad Tagirov  <tmurad@gmail.com>

	Initial commit of kml-tasks file which is a list of tasks to be done
	* projects/kml/kml-tasks: new

2007-07-01  Inge Wallin  <inge@lysator.liu.se>

	* src/DESIGN: Improve documentation

2007-06-28  Andrew Manson   <g.real.ate@gmail.com>

    Added a new tab to MarbleControlBox, Gps Option, and setup method
    in MarbleControlBox.h/cpp. Also connected nessary signals for
    using GpsOption.
    *src/MarbleControlBox.{h,cpp} (setupGpsOption) : New Method

    Added accessors and setters in MarbleWidget for showing the
    Gps Layer
    *src/lib/MarbleWidget.{h,cpp} (showGps, setShowGps) : New Methods

    Fixed the constructor of AbstractLayer to include
    AbstractContainer and fixed the look. Also included bool value in
    Layer to mark if it is visible.
    *src/lib/AbstractLayer/AbstractLayer.{h,cpp} (m_showLayer):New

    Added nessary variables to MarbleModelPrivate for the gps layer
    * src/lib/MarbleModel.cpp (m_gpsLayer, m_showGps) : New Variables

    Added new file to take care of gps layer with a Waypoint to
    represent current position.
    * src/lib/gps/GpsLayer: new

2007-06-27  Inge Wallin  <inge@lysator.liu.se>

	Temporarily bring back the old paintPlaceFolder due to problems
	just before the tagging of KDE alpha2.
	* src/lib/placemarkpainter.{h,cpp} (paintPlaceFolder): Bring back
	the old version.
	* src/lib/placemark.{h,cpp}: Bring back old members

2007-06-26  Inge Wallin  <inge@lysator.liu.se>

	Break out search for label space.
	* src/lib/placemarkpainter.{h,cpp} (roomForLabel): new function
	* src/lib/placemarkpainter.cpp (paintPlaceFolder): call roomForLabel

	* src/lib/placemarkpainter.h
	(PlaceMarkPainter::m_visiblePlaceMarks): use QList instead of QVector
	* src/lib/placemarkpainter.cpp (paintPlaceFolder): Almost make the
	QPixmap cache work.

2007-06-25  Inge Wallin  <inge@lysator.liu.se>

	Split out the check for visibility of a PlaceMark
	* src/lib/placemarkpainter.{h,cpp} (paintPlaceFolder): take
	width/height as parameters instead of the same/2.
	(paintPlaceFolder): call isVisible.
	(isVisible): New method
	* src/lib/MarbleModel.cpp (paintGlobe): Use new call signature for
	paintPlaceFolder

	Cleaning in preparation for a bugfix
	* src/lib/GridMap.cpp:  Cleaning
	 (createTropics): Show the tropics/polar circles already at radius=400
	* src/lib/MarbleWidget.cpp (centerOn): Remove superfluous code

2007-06-24  Inge Wallin  <inge@lysator.liu.se>

	Cleaning while learning the code
	* src/lib/placamarkmanager.h: Comment
	* src/lib/MarbleModel.cpp: Comments and cleaning

2007-06-23  Inge Wallin  <inge@lysator.liu.se>

	Add support for setting the home point and zoom (not working yet)
	* src/lib/MarbleWidget.cpp (class MarbleWidgetPrivate): new
	methods: m_homePoint and m_homeZoom
	* src/lib/MarbleWidget.{h,cpp} (setHome): New method
	* src/lib/MarbleModel.{h,cpp} (rotateTo): new method

2007-06-22  Inge Wallin  <inge@lysator.liu.se>

	Cleaning
	* src/lib/MarbleWidget.{h,cpp}: Cleaning

	Fix a bug where wrong PlaceMark was reused.
	* src/lib/placemarkpainter.cpp (class VisiblePlaceMark): new method
	(paintPlaceFolder): Set PlaceMark when a VisiblePlaceMark is reused.

	Optimize memory usage by only save labels for those PlaceMarks
	that are actually visible.
	* src/lib/placemark.h (class PlaceMark): Remove members
	m_symbolPixmap, m_symbolPos, m_labelPixmap, m_textRect, m_visible
	and their accessor functions.
	* src/lib/placemark.cpp: (PlaceMark): Remove initialization of
	removed members.
	* src/lib/placemark.h: (PlaceMarkContainer::clearTextPixmaps):
	Remove
	* src/lib/placemarkpainter.h (class PlaceMarkPainter): New members
	m_visiblePlacemarks, m_visiblePlacemarksPool
	* src/lib/placemarkpainter.cpp (class VisiblePlaceMark): New class
	(paintPlaceFolder): Use the VisiblePlacemarks in painting
	* src/lib/MarbleModel.cpp (setMapTheme): Don't call clearTextPixmaps
	* src/lib/MarbleWidget.cpp (centerOn): Don't call clearTextPixmaps

2007-06-21  Andrew Manson   <g.real.ate@gmail.com>

	Fixed a simple off by one error in TextureMapper.cpp. The issue
	was with the implementation of interlacing, or in fact when the
	display stopped using that method to draw.

2007-06-19  Inge Wallin  <inge@lysator.liu.se>

	Fix linking issue with AbstractLayer and Q_OBJECT
	* src/lib/CMakeLists.txt: Include AbstractLayer/AbstractLayer.cpp
	* src/lib/AbstractLayer/AbstractLayer.cpp: Include moc file.

2007-06-19  Andrew Manson   <g.real.ate@gmail.com>

    Incuded the nessary classes for all GPS Data Structures available
    in the GPX schema.
    * src/lib/gps/GpsElement.[cpp,h] : Added
    * src/lib/gps/Route.[cpp,h] : Added
    * src/lib/gps/Track.[cpp,h] : Added
    * src/lib/gps/Waypoint.[cpp,h] : Added
    * src/lib/gps/WaypointContainer.[cpp,h] : Added

    Added Implementations of nessary AbstractLayer classes that are
    extended by the GPS Classes.
    * src/lib/AbstractLayer/AbstractLayerContainer.cpp : Added
    * src/lib/AbstractLayer/AbstractLayerData.cpp : Added

2007-06-17  Inge Wallin  <inge@lysator.liu.se>

	Start of a simple system to only store pixmaps and other UI data
	for visible placemarks.
	* src/lib/placemarkpainter.cpp (class VisiblePlaceMark): New class

	Name change to improve readability
	* src/lib/placemark.h (class PlaceMark): m_rect -> m_textRect
	* src/lib/placemark.cpp (PlaceMark): Use new name

2007-06-16  Inge Wallin  <inge@lysator.liu.se>

	Simplify and clean the code in preparation for other changes.
	* src/lib/placemarkpainter.cpp (paintPlaceFolder): Simplify the
	code a lot, and in particular use pre-increments for iterators,
	which makes it a lot faster.

	Change name of class PlaceContainer into PlaceMarkContainer.
	* src/lib/placecontainer.h:   new name: PlaceMarkContainer.h
	* src/lib/placecontainer.cpp: new name: PlaceMarkContainer.cpp
	* src/lib/CMakeLists.txt: reflect the name change
	* src/lib/MarbleModel.h,       src/lib/MarbleModel.cpp,
	* src/lib/MarbleWidget.cpp,
	* src/lib/kml/KMLDocument.cpp,
	* src/lib/kml/KMLFolder.cpp,
	* src/lib/placemarkmanager.h,  src/lib/placemarkmanager.cpp,
	* src/lib/placemarkmodel.h,    src/lib/placemarkmodel.cpp,
	* src/lib/placemarkpainter.h,  src/lib/placemarkpainter.cpp,
	* src/lib/xmlhandler.h,        src/lib/xmlhandler.cpp:
	  Use the new names.

2007-06-16  Murad Tagirov  <tmurad@gmail.com>

    Created KMLPointParser which parses coordinates
    tag and sets parsed lon and lat to KMLPlaceMark.
    * src/lib/kml/KMLPointParser.{h,cpp} new file
    * src/lib/kml/KMLPlaceMark.{h,cpp}
    * src/lib/kml/KMLPlaceMarkParser.{h,cpp}

    Moved "deg2rad" constant from xmlhandler to GeoPoint.
    * src/lib/xmlhandler.cpp
    * src/lib/GeoPoint.cpp

    Added "m_parsed" field to parser classes to avoid
    parsing of incorrect tag sequences.
    * src/lib/kml/KMLDocumentParser.{h,cpp}
    * src/lib/kml/KMLFeatureParser.{h,cpp}

    Updated class diagram to show relations between
    parser classes. Added documentation for some classes
    * projects/kml/KMLClasses.xmi

2007-06-16  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issue 22: Check for spelling errors
	* src/lib/kml/KMLPlaceMarkParser.cpp: appers -> appears

2007-06-16  Murad Tagirov  <tmurad@gmail.com>

    Implemented parsing of KMLFeature fields
    (name, description, address, phone number)
    * src/lib/kml/KMLFeature.{h,cpp}

    Added protected field m_object to KMLObjectParser
    as this field is common for all parsers
    * src/lib/kml/KMLObjectParser.{h,cpp}
    * src/lib/kml/KMLFeatureParser.{h,cpp}
    * src/lib/kml/KMLPlaceMarkParser.{h,cpp}
    * src/lib/kml/KMLContainerParser.{h,cpp}
    * src/lib/kml/KMLDocumentParser.{h,cpp}

2007-06-15  Torsten Rahn  <rahn@kde.org>

    - Added a section in the Legend to explain
      color values. FIXME: This should
      be dynamically created for each map in the
      future.

2007-06-15  Torsten Rahn  <rahn@kde.org>

    - Removed ETOPO2 digital elevation model and
      replaced it by the much more recent
      (and usually more detailed) Shuttle Radar
      Topography Mission (SRTM) data.
      Resolution of the full dataset would be 1-3".
      For offline mode we are using a 21600x10800
      image.
    - Changed the colorpalette to something more
      subtil and professional looking.

    * src/lib/vectorcomposer.cpp: change color for lakes
    * src/lib/MarbleModel.cpp: new default map
    * src/lib/texturepalette.cpp: better colors
    * tools/palettegen/palettegen.cpp: fix dir structure
    * data/maps/earth/srtm: SRTM data
    * data/maps/earth/srtm/srtm.jpg: SRTM data
    * data/maps/earth/srtm/srtm.dgml: SRTM data
    * data/maps/earth/srtm/srtm-preview.png: SRTM data
    * data/maps/earth/etopo2:
    * data/seacolors.leg: better colors
    * data/landcolors.leg: better colors
    * data/CMakeLists.txt: install SRTM instead of ETOPO2

2007-06-15  Murad Tagirov  <tmurad@gmail.com>

	Added support for start, end tags in KMLPlaceMarkParser.
	KMLPlaceMarks only added if they completely parsed in other
	case they just deleting with parser.
	* src/lib/kml/KMLPlaceMarkParser.{h,cpp}

2007-06-15  Inge Wallin  <ingwa@cendio.se>

	Fix Krazy issue 22: Check for spelling errors
	* src/lib/AbstractLayer/AbstractLayerContainer.h (AbstractData*>):
	Fix spelling

	Fix Krazy issue 20: Check for Q_OBJECT
	* src/lib/AbstractLayer.h (class AbstractLayer): Add Q_OBJECT
	* src/lib/AbstractLayer/AbstractLayer.h (class AbstractLayer): Add Q_OBJECT

	Fix Krazy issue 12: Check for proper include directives.
	* src/lib/AbstractLayer.cpp:               Fix include
	* src/lib/AbstractLayer/AbstractLayer.cpp: Fix include

	Fix Krazy issue 09: Check that files end with a newline.
	* src/lib/AbstractLayer/AbstractLayerData.h: Add a newline.

2007-06-15  Murad Tagirov  <tmurad@gmail.com>

    Introduced KMLContainer, KMLContainerParser classes.
    This classes are base classes for KMLDocument and
    KMLFolder objects.
    * src/lib/kml/KMLContainer.{h,cpp}
    * src/lib/kml/KMLContainerParser.{h,cpp}

    Parsing of document, container, feature works. If more general
    object (instance of KMLDocument for example) does not support
    tags it just translates it to it's child objects. This allow to
    split parsing to small simpler classes.
    * src/lib/kml/KMLDocumentParser.{h,cpp}
    * src/lib/kml/KMLContainerParser.{h,cpp}
    * src/lib/kml/KMLFeatureParser.{h,cpp}
    * src/lib/kml/KMLObjectParser.{h,cpp}

    Added documentation some of classses in class diagram
    * projects/kml/KMLClasses.xmi

2007-06-15  Torsten Rahn  <rahn@kde.org>

    Finish the float to double changes
    * data/placemarks/baseplacemarks.cache:  float->double
    * data/placemarks/elevplacemarks.cache:  float->double
    * data/placemarks/cityplacemarks.cache:  float->double

    * src/lib/placemarkmanager.cpp:          float->double

2007-06-15  Murad Tagirov  <tmurad@gmail.com>
    Added KML_GSOC variable to check parsing
    * CMakeList.txt

    Basic logic of parsing kml document is done
    * src/lib/kml/KMLPlaceMark{h,cpp}
    * src/lib/kml/KMLPlaceMarkParser{h,cpp}

2007-06-13  Murad Tagirov  <tmurad@gmail.com>
    Added some logic for parsing kml documents.
    * src/lib/kml/KMLObjectParser.{h,cpp}
    * src/lib/kml/KMLFeatureParser.{h,cpp}
    * src/lib/kml/KMLDocumentParser.{h,cpp}

    Added KML_DEBUG to CMakeList to debug count of kml objects.
    If KML_DEBUG is ON then KMLObject count number of instances
    this could help to avoid memory leaks in feature
    * src/lib/kml/KMLObject.cpp

2007-06-12  Murad Tagirov  <tmurad@gmail.com>
    Added KMLFolder. KMLDocument now inherited from KMLFolder
    which is used to store objects inherited from KMLFeature
    (placemarks, features, etc.)
    * src/lib/kml/KMLFolder{h,cpp}

    Updated CODING page. Added kate instructions.
    * CODING

    Added KMLDocumentParser. Initially trying to implement
    parsing of placemark objects without support of folders.
    Parsing logic is almost same as in KAtlasXmlHandler.
    * src/lib/kml/KMLDocumentParser.{h,cpp}

2007-06-11  Torsten Rahn  <rahn@kde.org>

	Adding more islands for canarian islands, mauritius,
	Netherlands and Denmark.
	* marble/data/mwdbii/PISLAND.PNT

2007-06-11  Inge Wallin  <inge@lysator.liu.se>

	Finish the float to double changes
	* src/lib/AbstractLayer.{h,cpp}: float -> double
	* src/lib/Quaternion.cpp:        float -> double
	* src/lib/GeoPolygon.cpp:        float -> double
	* src/lib/katlaswindrose.cpp:    float -> double
	* src/lib/xmlhandler.cpp:        float -> double
	* src/lib/TextureMapper.cpp:     float -> double

	More float to double changes, the measure tool
	* src/lib/measuretool.{h,cpp}:   float -> double
	* src/lib/katlasviewpopupmenu.h: float -> double
	* src/lib/katlasviewinputhandler.cpp: float -> double
	* src/lib/MarbleWidget.h:        float -> double in connect()

	More float to double changes, the placemark layer
	* src/lib/placemarkpainter.{h,cpp}: float -> double

	More float to double changes, this time the vector layer
	* src/lib/vectormap.{h,cpp}:     float -> double
	* src/lib/clippainter.{h,cpp}:   float -> double

	More float to double changes - the rest of the tile layer
	* src/lib/tilescissor.cpp:       float -> double
	* src/lib/texcolorizer.cpp:      float -> double
	* src/lib/TextureTile.cpp:       float -> double

	More float to double changes, taking it step by step.
	* src/lib/GridMap.{h,cpp}:       float -> double
	* src/lib/TextureMapper.{h,cpp}: float -> double

	More float to double changes, taking it step by step.
	* src/lib/MarbleModel.{h,cpp}:   float -> double
	* src/lib/MarbleWidget.{h,cpp}:  float -> double

	Change float to double to increase precision.
	* src/lib/Quaternion.{h,cpp}: float -> double
	* src/lib/GeoPoint.{h,cpp}:   float -> double
	* src/lib/GeoPolygon.{h,cpp}: float -> double
	* src/lib/MarbleWidget.{h,cpp},  src/lib/TextureMapper.cpp
	src/lib/katlasviewinputhandler.{h,cpp},
	src/lib/katlasviewpopupmenu.cpp, src/lib/measuretool.cpp,
	src/lib/placemark.{h,cpp},       src/lib/placemarkmanager.cpp
	src/main.cpp: Just change the floats that needed to be changed.

2007-06-11  Torsten Rahn  <rahn@kde.org>

	* src/lib/tilescissor.{h,cpp}: code changes to introduce
	an additional standalone command line tool to create tiles.

2007-06-10  Inge Wallin  <inge@lysator.liu.se>

	Krazy fix for apidox
	* src/lib/MarbleWidget.h (MarbleWidget): Fix apidox: unknown parameter

	Clean up
	* src/lib/clippainter.{h,cpp}: use the m_ convention everywhere.

	Clean up
	* src/lib/vectormap.{h,cpp}: use the m_ convention everywhere.

	Minor cleaning while learning the code
	* src/lib/vectormap.cpp, placemark.h, placemarkpainter.cpp,
	vectorcomposer.cpp, MarbleModel.cpp: minor comments and cleaning

2007-06-09  Torsten Rahn  <rahn@kde.org>

	* src/katlascontrol.{h,cpp}: Introduce QSplitter

2007-06-07  Inge Wallin  <ingwa@shihonage.lkpg.cendio.se>

	Introduce d-pointer in MarbleWidget
	* src/lib/MarbleWidget.cpp (d): new member
	* src/lib/MarbleWidget.cpp (MarbleWidgetPrivate): new class
	(rest of MarbleWidget.cpp): use d-> everywhere

	Krazy 4: Check for an acceptable copyright
	* src/lib/kml/KMLDocument.cpp: Add header with copyright.

2007-06-06  Murad Tagirov  <tmurad@gmail.com>

	Added KMLDocument
	* src/lib/kml/KMLDocument.{h,cpp}: new files

2007-06-06  Inge Wallin  <inge@lysator.liu.se>

	Fix copyright statements
	* src/lib/kml/*.{h,cpp}: Set the correct email for Murad Tagirov

	Krazy 13: Check for inlince methods in public classes
	* src/MarbleControlBox.cpp (setLocations): Make non-inline
	(minimumZoom): Make non-inline

	Krazy 13: Check for inlince methods in public classes
	* src/lib/MarbleWidget.{h,cpp}: make all functions non-inline

	Krazy 13: Check for inlince methods in public classes
	* src/lib/searchlistview.cpp (activate): Make non-inline.

	Krazy 12: Check for proper include directives
	* src/lib/marble_export.h: Use <QtCore/QtGlobal> instead of "..."

	Introduce d-pointer in MarbleModel
	* src/lib/MarbleModel.cpp (d): new member
	* src/lib/MarbleModel.cpp (MarbleModelPrivate): new class
	(rest of MarbleModel.cpp): use d-> everywhere
	This also fixes a lot of Krazy 13.issues:
	  inline functions in public classes.

2007-06-05  Torsten Rahn  <rahn@kde.org>

    * src/lib/LegendBrowser.{h,cpp}: More changes in the
    LegendBrowser to avoid flicker and several
    additional attributes which are now supported.

    small TODOs: Make LegendBrowser a Designer Plugin
    and further improve its HTML ...

    * src/lib/placemarkpainter.{h,cpp}: made cities and
    terrain accessible from MarbleWidget.

2007-06-05  Inge Wallin  <inge@lysator.liu.se>

	Krazy 21: Check for signals: and slots:
	* src/lib/*.h: switch Q_SIGNALS: for signals: and Q_SLOTS: for slots:
	(This fixes 31 issues in one swoop!)

	Make it build again
	* src/lib/LegendBrowser.h (LegendBrowser): Export the class, since
	it's part of a library.

2007-06-05  Torsten Rahn  <rahn@kde.org>

	* src/lib/LegendBrowser.{h,cpp}: Adding new Legend Browser
	class that supports checkboxes.

	Works partially. I'm about to finish this now and
	will add settings saving for the Qt and KDE frontend
	right after.

2007-06-05  Inge Wallin  <inge@lysator.liu.se>

	Krazy: 17: Check for inappropriate pass-by-value function args
	* src/lib/kml/KMLFeature.{h,cpp}: Pass QStrings by const reference

	Krazy:  4: Check for an acceptable copyright
	Krazy: 14: Check for an acceptable license
	* src/lib/kml/KMLObject.{h,cpp}:  Add header w/ copyright and license
	* src/lib/kml/KMLFeature.{h,cpp}: Add header w/ copyright and license

	Krazy: 17: Check for inappropriate pass-by-value function args
	* src/lib/kml/KMLFeature.{h,cpp}: Pass QStrings by reference

2007-06-05  Torsten Rahn  <rahn@kde.org>

    * Adding more options for the Qt-Designer plugin
      (later on to be integrated with the Legend in Marble):
        - show relief, ice, rivers, lakes, borders, elevation model
        - quick and dirty rendering
        - updated examples2.ui to reflect those changes

2007-06-04  Inge Wallin  <ingwa@shihonage.lkpg.cendio.se>

	Krazy: 12. Check for proper include directives
	* src/lib/marble_export.h: Fix include
	* src/plugins/marblewidget/MarbleWidgetPlugin.cpp: Fix include
	* src/plugins/navigator/MarbleNavigatorPlugin.cpp: Fix include

	Clean up
	* src/lib/vectorcomposer.{h,cpp}: use the m_ convention everywhere.

2007-06-04  Murad Tagirov  <tmurad@gmail.com>
    Updated class diagram
    Added folder for KML objects relates classes
    Added base classes for KML: KMLObject, KMLObject

Murad, this should look like:

	Add initial KML classes
	* src/lib/kml: new subdirectory
	* src/lib/kml/KMLObject.{h,cpp}: new file
	* src/lib/kml/KMLFeature.{h,cpp}: new file

2007-06-04  Inge Wallin  <inge@lysator.liu.se>

	Improve apidox
	* src/lib/MarbleModel.h (): Improve apidox
	* src/lib/MarbleWidget.h (): Improve apidox

2007-06-04  Osterfeld

	Remove #ifndef Q_OS_MACX surrounding #include .moc
	* Almost all files: Remove surrounding #nfndef

2007-06-04  Torsten Rahn  <rahn@kde.org>

	* Adding more options for the Qt-Designer plugin
	  (later on to be integrated with the Legend in Marble).

2007-06-03  Inge Wallin  <inge@lysator.liu.se>

	APIDOX
	* src/lib/MarbleWidget.h: Finish APIDOX.
	* src/lib/MarbleWidget.cpp: small naming

	APIDOX
	* src/lib/MarbleWidget.h: Document everything but the slots.

	Fix compile error
	* src/plugins/marblewidget/MarbleWidgetPlugin.cpp (createWidget):
	Use MarbleModel instead of KAtlasGlobe.

2007-06-02  Inge Wallin  <inge@lysator.liu.se>

	Improve integration between MarbleControlBox and MarbleWidget
	* src/MarbleControlBox.h (m_widget): new member
	* src/MarbleControlBox.cpp (addMarbleWidget): New method
	* src/katlascontrol.cpp (KAtlasControl): use addMarbleWidget
	instead of connecting signals/slots ourselves

	Make a standalone widget that creates its own model
	* src/lib/MarbleWidget.cpp (MarbleWidget(parent)): new constructor
	(construct): New method
	* src/katlascontrol.cpp (KAtlasControl): Use new constructor for
	MarbleWidget
	* src/katlascontrol.h (KAtlasControl::m_marbleModel): removed

	Rename KatlasGlobe -> MarbleModel
	* src/lib/MarbleModel.h (): renamed from katlasglobe.h
	* src/lib/MarbleModel.cpp (): renamed from katlasglobe.cpp
	* src/katlascontrol.{h,cpp}: use new name
	* src/lib/MarbleWidget.{h,cpp}: use new name
	* src/lib/katlasviewpopupmenu.{h,cpp}: use new name
	* src/lib/katlasviewinputhandler.{h,cpp}: use new name

	Show zoom level in the status bar
	* src/KdeMainWindow.cpp (showZoom): new slot
	(createStatusBar): create zoom label
	(MainWindow): Show initial zoom level
	* src/katlascontrol.h (marbleWidget): New method
	* src/lib/MarbleWidget.h (zoom): New method.

2007-05-31  Inge Wallin  <inge@lysator.liu.se>

	Remove worthless APIDOX
	src/httpfetchfile.h		src/katlaswindrose.h
	src/placemarkinfodialog.h	src/katlascontrol.h
	src/placemarkmodel.h		src/katlasviewpopupmenu.h
	src/katlasmapscale.h		src/katlasviewinputhandler.h
	src/measuretool.h		src/vectormap.h
	src/placemarkpainter.h		src/TileLoader.h
	src/tinywebbrowser.h		src/texcolorizer.h
	src/katlasaboutdialog.h		src/placemarkmanager.h
	src/HttpDownloadManager.h	src/marblecontrol.h
	src/TextureMapper.h		src/katlasflag.h
	src/vectorcomposer.h		src/GridMap.h
	src/katlastilecreatordialog.h	src/katlasthemeselectview.h
	src/katlascrosshair.h		src/tilescissor.h
	src/FastMath.h			src/clippainter.h
	src/TextureTile.h:
	Remove apidox only consisting of @author so that the resulting
	output only contains actual information.

	Add APIDOX
	* src/MarbleWidget.h (class MarbleWidget): Add class docs and some
	method docs.
	* src/MarbleControlBox.h (class MarbleControlBox): Add class docs
	and some method docs.
	* src/katlasglobe.h (class KAtlasGlobe): Add class docs.

	Rename KAtlasToolBox into MarbleControlBox
	* src/katlastoolbox.ui  -> src/MarbleControlBox.ui
	* src/katlastoolbox.h   -> src/MarbleControlBox.h
	* src/katlastoolbox.cpp -> src/MarbleControlBox.cpp
	* src/CmakeLists.txt: use new name
	* src/marbleosx.pro:  use new name
	* src/katlascontrol.cpp: Use new class name
	* src/DESIGN: Update documentation

2007-05-29  Torsten Rahn  <rahn@kde.org>

Some fixes:

    * Changed zPointLimit to avoid "Green Pacific" bug
    * Changed xmlhandler to change placemark symbols according to legend
    * Added resulting cityplacemarks.cache file

2007-05-28  Inge Wallin  <inge@lysator.liu.se>

	Fix Krazy issue: Check for Qt classes that should not be used
	* src/QtMainWindow.cpp (exportMapScreenShot): Suppress false
	positives for krazy tests
	* src/KdeMainWindow.cpp (exportMapScreenShot): Use KMessageBox
	instead of QMessageBox.

	Fix Krazy issue: missing tags: copyright
	Fix Krazy issue: missing license
	* tools/palettegen/palettegen.cpp (main): Generate header with
	Copyright and license
	* src/texturepalette.cpp: Regenerate this file with the above
	mentioned header.

	Fix Krazy issue: inappropriate pass-by-value function args
	* src/TextureTile.h (signal downloadTile): Pass QString parameter
	by reference
	* src/HttpDownloadManager.cpp (addJob): Pass QString parameter by
	reference.
	* src/TileLoader.cpp (loadTile): Connect with parameter QString &

	Fix Krazy issue: Proper include directives
	* tools/palettegen/palettegen.cpp:
	* tools/texissor/texissor.cpp: Fix includes

2007-05-27  Torsten Rahn  <rahn@kde.org>

    * Added Legend (breaks placemarks)
    * compiles with Qt 4.2 again

2007-05-26  Inge Wallin  <inge@lysator.liu.se>

	Rename katlasview.{h,cpp} into MarbleWidget
	* src/katlasview.cpp -> src/MarbleWidget.cpp:
	src/katlasview.h   -> src/MarbleWidget.h
	src/katlascontrol.h,          src/katlascontrol.cpp,
	src/katlasviewinputhandler.h, src/katlasviewinputhandler.cpp,
	src/katlasviewpopupmenu.h,    src/katlasviewpopupmenu.cpp: Use new name
	src/CMakeLists.txt: Use new filenames

	Create MarbleControl widget
	* src/marblecontrol.ui:  new file
	* src/marblecontrol.h:   new file
	* src/marblecontrol.cpp: new file

	Cleanup
	* tools/svg2pnt/svg2pnt.cpp: Clean
	* tools/svg2pnt/svgxmlhandler.cpp: Clean
	* tools/texissor/texissor.cpp: Clean
	* tools/palettegen/palettegen.cpp: Clean
	* tools/asc2kml/asc2kml.cpp: Clean

	Krazy codechecks
	* tools/*/*.{h,cpp}: Add license and copyright status

2007-05-25  Inge Wallin  <inge@lysator.liu.se>

	Krazy codechecks
	* src/*.{h,cpp}: Add license and copyright status

2007-05-21  Inge Wallin  <inge@lysator.liu.se>

	Cleanup
	* src/katlasflag.{h,cpp}: Clean
	* src/katlasdirs.h: Clean
	* src/katlasaboutdialog.{h,cpp}: Clean
	* src/HttpDownloadManager.{h,cpp}: Clean
	* src/httpfetchfile.{h,cpp}: Clean
	* src/texcolorizer.{h,cpp}: Clean
	* src/xmlhandler.{h,cpp}: Clean

2007-05-20  Inge Wallin  <inge@lysator.liu.se>

	Cleanup
	* src/katlasviewpopupmenu.cpp (): Clean

2007-05-19  Inge Wallin  <inge@lysator.liu.se>

	Cleanup
	* src/katlasviewinputhandler.cpp (*): Clean

	Cleanup
	* src/TileLoader.cpp,   src/HttpDownloadManager.cpp
	src/katlastoolbox.cpp,  src/measuretool.cpp,
	src/texcolorizer.cpp,   src/katlaswindrose.cpp,
	src/katlastoolbox.h,    src/xmlhandler.cpp,
	src/placemarkmodel.cpp, src/katlasviewinputhandler.cpp: Remove warnings

	Fix a bug
	* src/TileLoader.h (message): Print the variable test instead of
	"test".

	Cleanup
	* src/katlasthemeselectview.{h,cpp}: Clean

15.05.07 - tackat
	- Made changes according to Krazy check
	- added incomplete HttpDownloadManager

11.05.07 - ingwa
	- Cleaned katlasbox.{h,cpp}
	- Cleaned KdeMainWindow.{h,cpp}
	- Cleaned tinywebbrowser.{h,cpp}

11.05.07 - ingwa
	- Create the model in KAtlasControl instead of in the view.
	- Cleaned searchcombobox.{h,cpp}
	- Cleaned searchlistview.{h,cpp}
09.05.07 - tackat
    - Updated marble.desktop file
    - Changes in DESIGN and TODO

09.05.07 - tackat
    - Marble got Tooltips and WhatsThis now.
    - Applied patch by Ralf Habacker for improved icon support in Windows

08.05.07 - tackat
    - Marble got a docbook-handbook now.

07.05.07 - tackat
    - Make KMarble compile again (KMainWindow -> KXmlGuiWindow)
    - Default to QTONLY = OFF

07.05.07 - tackat
    Added Copy, Export Map and Printing to the Qt interface.

06.05.07 - ingwa
	Cleaning: TextureMapper: use m_ for all members + getFoo() -> foo()
	Cleaning: KAtlasView:    use m_ for all members + getFoo() -> foo()
	Cleaning: KAtlasGlobe:   use m_ for all members.

05.05.07 - tackat
	Added the KDE interface

29.04.07 - ingwa
	Cleaned measuretool.{h,cpp}
	Cleaned katlasmapscale.{h,cpp}
	Cleaned katlaswindrose.{h,cpp}
	Cleaned katlascrosshair.{h,cpp}
	Cleaned placemarkinfodialog.{h,cpp}
	Cleaned maptheme.{h,cpp}

26.04.07 - ingwa
	Cleaned tilescissor.{h,cpp}

25.04.07 - ingwa
	Lots of small cleaning
	Cleaned placemarkmodel.{h,cpp}

23.04.07 - ingwa
	Fixed typo in MANIFESTO.txt
	Cleaned placemarkpainter.{h,cpp}
	Cleaned placemarkmanager.{h,cpp}

22.04.07 - ingwa
	Cleaned placemark.{h,cpp}
	Cleaned placecontainer.{h,cpp}
	Cleaned vectorcomposer.{h,cpp}

22.04.07 - ingwa
	First draft of the DESIGN file with headings, but lots of missing
	contents.

22.04.07 - murad/tackat
	Introducing m_dragThreshold in KAtlasInputHandler to get rid of
	extra repaints.
