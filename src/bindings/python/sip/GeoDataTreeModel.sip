// Copyright 2011 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Marble
{
class GeoDataTreeModel : QAbstractItemModel
{
%TypeHeaderCode
#include <GeoDataTreeModel.h>
%End

public:
    explicit                GeoDataTreeModel (QObject* parent /TransferThis/ = 0);
    ~GeoDataTreeModel ();
    virtual bool            hasChildren (const QModelIndex& parent) const;
    int                     rowCount (const QModelIndex& parent = QModelIndex()) const;
    QVariant                headerData (int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const;
    QVariant                data (const QModelIndex& index, int role) const;
    QModelIndex             index (int row, int column, const QModelIndex& parent = QModelIndex()) const;
    QModelIndex             index (Marble::GeoDataObject* object);
    QModelIndex             parent (const QModelIndex& index) const;
    int                     columnCount (const QModelIndex& parent = QModelIndex()) const;
    Qt::ItemFlags           flags (const QModelIndex& index) const;
    bool                    setData (const QModelIndex& index, const QVariant& value, int role = Qt::EditRole);
    void                    reset ();
    void                    setRootDocument (Marble::GeoDataDocument* document);
    Marble::GeoDataDocument*  rootDocument ();
    int                     addFeature (Marble::GeoDataContainer* parent, Marble::GeoDataFeature* feature);
    bool                    removeFeature (Marble::GeoDataContainer* parent, int index);
    bool                    removeFeature (Marble::GeoDataFeature* feature);
    void                    updateFeature (Marble::GeoDataFeature* feature);
    int                     addDocument (Marble::GeoDataDocument* document);
    void                    removeDocument (int index);
    void                    removeDocument (Marble::GeoDataDocument* document);
    void                    update ();
signals:
    void                    removed (Marble::GeoDataObject* object);
    void                    added (Marble::GeoDataObject* object);
};
};
