// Copyright 2011 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Marble
{
class AlternativeRoutesModel : QAbstractListModel
{
%TypeHeaderCode
#include <routing/AlternativeRoutesModel.h>
%End

public:
    enum WritePolicy
    {
        Instant,
        Lazy
    };
    explicit                AlternativeRoutesModel (QObject* parent /TransferThis/ = 0);
    ~AlternativeRoutesModel ();
    int                     rowCount (const QModelIndex& parent = QModelIndex()) const;
    QVariant                headerData (int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const;
    QVariant                data (const QModelIndex& index, int role = Qt::DisplayRole) const;
    Marble::GeoDataDocument*  route (int index);
    void                    newRequest (Marble::RouteRequest* request);
    void                    addRoute (Marble::GeoDataDocument* document, Marble::AlternativeRoutesModel::WritePolicy policy = Marble::AlternativeRoutesModel::Lazy);
    void                    setCurrentRoute (int index);
    void                    clear ();
    Marble::GeoDataDocument*  currentRoute ();
    static Marble::GeoDataLineString*  waypoints (const Marble::GeoDataDocument* document);
    static qreal            distance (const Marble::GeoDataCoordinates& satellite, const Marble::GeoDataCoordinates& lineA, const Marble::GeoDataCoordinates& lineB);
    static QVector<qreal>   deviation (const Marble::GeoDataDocument* routeA, const Marble::GeoDataDocument* routeB);
signals:
    void                    currentRouteChanged (Marble::GeoDataDocument* newRoute);
    void                    currentRouteChanged (int index);
};
};
