//
//     Copyright 2009 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace Marble
{

class AbstractFloatItem : Marble::RenderPlugin /Abstract/
{
%TypeHeaderCode
#include <AbstractFloatItem.h>
%End

public:
    QPen                    pen () const;
    void                    setPen (const QPen& pen);
    QFont                   font () const;
    void                    setFont (const QFont& font);
    void                    setPositionLocked (bool lock);
    virtual QString         renderPolicy () const;
    virtual QStringList     renderPosition () const;

protected:
    bool                    eventFilter (QObject* object, QEvent* e);

public:
    virtual ~AbstractFloatItem ();
    bool                    render (Marble::GeoPainter* painter, Marble::ViewportParams* viewport, const QString& renderPos = "FLOAT_ITEM", Marble::GeoSceneLayer* layer = 0);
    void                    setVisible (bool visible);
    bool                    visible () const;
    bool                    positionLocked ();
    void                    show ();
    void                    hide ();
protected:
    virtual void            contextMenuEvent (QWidget* w, QContextMenuEvent* e);
    virtual void            toolTipEvent (QHelpEvent* e);
    QMenu*                  contextMenu ();
public:
    explicit                AbstractFloatItem (const Marble::MarbleModel* marbleModel, const QPointF& point = QPointF(10.0,10.0), const QSizeF& size = QSizeF(150.0,50.0));
protected:
    virtual void            changeViewport (Marble::ViewportParams* viewport);
};
// AbstractFloatItem

};
// Marble


