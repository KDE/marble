// Copyright 2011 Simon Edwards <simon@simonzone.com>

//                 Generated by twine2

// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU Library General Public License as
// published by the Free Software Foundation; either version 2, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details

// You should have received a copy of the GNU Library General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc.,
// 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

namespace Marble
{
class RoutingModel : QAbstractListModel
{
%TypeHeaderCode
#include <routing/RoutingModel.h>
%End

public:
    enum RoutingModelRoles
    {
        CoordinateRole,
        TurnTypeIconRole,
        LongitudeRole,
        LatitudeRole
    };
    explicit                RoutingModel (Marble::RouteRequest* request, Marble::MarbleModel* model, QObject* parent /TransferThis/ = 0);
    ~RoutingModel ();
    int                     rowCount (const QModelIndex& parent = QModelIndex()) const;
    QVariant                headerData (int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const;
    QVariant                data (const QModelIndex& index, int role = Qt::DisplayRole) const;
    void                    exportGpx (QIODevice* device) const;
    void                    clear ();
    bool                    deviatedFromRoute () const;
    const Marble::Route&    route () const;
    bool                    setCurrentRoute (Marble::GeoDataDocument* document);
    void                    updatePosition (Marble::GeoDataCoordinates, qreal);
signals:
    void                    positionChanged ();
    void                    deviatedFromRoute (bool deviated);
    void                    currentRouteChanged ();
public:
    int                     rightNeighbor (const Marble::GeoDataCoordinates& position, const Marble::RouteRequest * route) const;
};
};
